{"version":3,"file":"core.mjs","sources":["../../../projects/core/src/lib/utils/constants/global-constants.ts","../../../projects/core/src/lib/utils/helpers/initialization.ts","../../../projects/core/src/lib/utils/validators/email.ts","../../../projects/core/src/lib/utils/validators/idNumber.ts","../../../projects/core/src/lib/utils/validators/phone.ts","../../../projects/core/src/lib/utils/validators/removeSpaces.ts","../../../projects/core/src/lib/utils/validators/rut.ts","../../../projects/core/src/lib/utils/validators/file-type.validator.ts","../../../projects/core/src/lib/utils/validators/no-white-space.ts","../../../projects/core/src/lib/utils/validators/alphanumeric.ts","../../../projects/core/src/lib/utils/pipes/truncate-text.pipe.ts","../../../projects/core/src/lib/utils/types/custom-dialog.ts","../../../projects/core/src/lib/services/app-config.service.ts","../../../projects/core/src/lib/services/api.service.ts","../../../projects/core/src/lib/services/dialog.service.ts","../../../projects/core/src/lib/error-handler/store/error-handler.actions.ts","../../../projects/core/src/lib/error-handler/store/error-handler.effects.ts","../../../projects/core/src/lib/error-handler/store/error-handler.reducer.ts","../../../projects/core/src/lib/error-handler/error-handler-interceptor.service.ts","../../../projects/core/src/public-api.ts","../../../projects/core/src/core.ts"],"sourcesContent":["export const PAGES = {\r\n\t// LOGIN: '/login',   <= Example\r\n};\r\n\r\nexport const REGEX = {\r\n   EMAIL : /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n   ALPHANUMERIC: /^[a-zA-Z0-9]*$/ ,// alphanumeric: must contain only letters and numbers\r\n   NO_WHITESPACE: /^\\S*$/\r\n};\r\n\r\nexport const ASSETS = {\r\n\t// LOGO_COLOR: 'assets/svg/logo-color.svg',   <= Example\r\n};\r\n\r\nexport enum DialogType {\r\n  User = 'user',\r\n  Delete = 'delete',\r\n  Register = 'register',\r\n  AdminNotification = 'adminNotification'\r\n}\r\n\r\nexport type Dialog = {\r\n  [key in DialogType]?: boolean\r\n}\r\n\r\nexport const InitialDialogState: Dialog = {\r\n  [DialogType.Register]: false,\r\n  [DialogType.User]: false,\r\n  [DialogType.Delete]: false,\r\n  [DialogType.AdminNotification]: false,\r\n  // ... other initial dialog states\r\n}\r\n\r\n\r\nexport enum RoleType {\r\n  Admin = 1,\r\n  Blogger = 2\r\n}\r\n\r\nexport enum ImagePosition{\r\n  Top = 0,\r\n  Left = 1,\r\n  Bottom = 2,\r\n  TopAndBottom = 3\r\n}\r\n\r\nexport enum FilterFrom{\r\n  AllArticles = 'articles',\r\n  Recent = 'recent'\r\n}\r\n","import {AppConfigService} from \"../../services\";\r\n\r\n\r\nexport function appConfig(app: AppConfigService) {\r\n\treturn () => app.loadConfig();\r\n}\r\n","import { AbstractControl, FormControl } from '@angular/forms';\r\n\r\nexport const EMAIL_REGEX = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\nexport function ValidateEmail(control: AbstractControl): any {\r\n  const value: string = control.value;\r\n  if (!value) return null;\r\n\r\n  const emailregex = EMAIL_REGEX;\r\n\r\n  if (emailregex.test(value)) return null;\r\n  else return { emailPattern: true };\r\n}\r\n","import { AbstractControl, FormControl } from '@angular/forms';\r\n\r\nfunction validationIdDigit(ci: string): number {\r\n  let a = 0;\r\n\r\n  if (ci.length <= 6) {\r\n    for (let i = ci.length; i < 7; i++) {\r\n      ci = '0' + ci;\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    a += (parseInt('2987634'[i], 10) * parseInt(ci[i], 10)) % 10;\r\n  }\r\n\r\n  if (a % 10 === 0) return 0;\r\n  else return 10 - (a % 10);\r\n}\r\n\r\nexport function ValidateIdNumber(control: AbstractControl): any {\r\n  if (control.value) {\r\n    let ci = control.value;\r\n    const dig = ci[ci.length - 1];\r\n\r\n    if (ci === '') return { required: true };\r\n    else if (\r\n      ci.length !== 8 ||\r\n      dig != validationIdDigit(ci.replace(/[0-9]$/, ''))\r\n    )\r\n      return { invalid: true };\r\n\r\n    return null;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport function ValidatePhoneNumber(control: FormControl): any {\r\n  const reg: string = control.value.toString();\r\n\r\n  if (reg === '') return null;\r\n\r\n  const cellphone = /^0(91|92|93|94|95|96|97|98|99)[0-9]{6}$/;\r\n  const phoneRest = /^4(2|33|47|45|64|62|77|73|72|56|54|52|34|35|44|36|63)[0-9]{5,6}$/;\r\n  const phoneMontevideo = /^2[0-9]{7}$/;\r\n\r\n  if (reg.match(cellphone) || reg.match(phoneRest) || reg.match(phoneMontevideo)) return null;\r\n  else return { invalid: true };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function removeSpaces(control: AbstractControl) {\r\n  if (control && control.value && !control.value.replace(/\\s/g, '').length) {\r\n    control.setValue('');\r\n  }\r\n  return null;\r\n}","import { FormControl } from '@angular/forms';\r\n\r\nfunction rutValidationDigit(rut: string): number {\r\n  let count = 0;\r\n  const data = '43298765432';\r\n\r\n  data.split('').forEach((dig, i) => {\r\n    count += parseInt(dig) * parseInt(rut[i]);\r\n  });\r\n\r\n  const result = count % 11;\r\n\r\n  if (result === 0) return 0;\r\n  else return (11 - result);\r\n}\r\n\r\nexport function ValidateRUT(control: FormControl) {\r\n  const rut = control.value || '';\r\n  const value = rut;\r\n\r\n  // if (rut === '') return { required: true };\r\n  if (rut === '') return null;\r\n\r\n  const dig = value[value.length - 1];\r\n  if (value === '' || value.length !== 12 || dig != rutValidationDigit(value)) return { invalid: true }\r\n\r\n  return null;\r\n}\r\n","import {FormControl} from '@angular/forms';\r\n\r\n\r\n// Whenever the user uploads a file, we return a true (invalid)\r\n// value if its extension is not the same as the one we defined in\r\n// the validator.\r\nexport function requiredFileType( requiredType: string ) {\r\n  return function (control: FormControl) {\r\n    const extension = control.value.type ;\r\n    if ( extension !== requiredType ) {\r\n        return { requiredFileType: true };\r\n      }\r\n      return null;\r\n    }\r\n\r\n}\r\n","import {AbstractControl} from '@angular/forms';\r\nimport {REGEX} from '@core';\r\n\r\nexport function ValidateNoWhitespace(control: AbstractControl): any {\r\n  const value: string = control.value;\r\n  if (!value) return null;\r\n\r\n  if (value.match(REGEX.NO_WHITESPACE)) return null;\r\n  else return { whitespacePattern: true };\r\n}\r\n","import {AbstractControl} from '@angular/forms';\r\nimport {REGEX} from '@core';\r\n\r\nexport function ValidateAlphanumeric(control: AbstractControl): any {\r\n  const value: string = control.value;\r\n  if (!value) return null;\r\n\r\n  if (value.match(REGEX.ALPHANUMERIC)) return null;\r\n  else return { alphanumericPattern: true };\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n\tname: 'truncate',\r\n\tstandalone : true\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n\t\r\n\ttransform(value: string, limit = 25, completeWords = false, ellipsis = '...') {\r\n\t\tif (completeWords) {\r\n\t\t\tlimit = value.substr(0, limit).lastIndexOf(' ');\r\n\t\t}\r\n\t\treturn `${value.substr(0, limit)}${ellipsis}`;\r\n\t}\r\n\t\r\n}\r\n\r\n/*\r\nThis pipe will cut off the text at the character limit you specify.\r\nIf completeWords is true, it will cut off at the last complete word before the limit.\r\n It then appends an ellipsis to the end (or whatever string you pass for ellipsis).\r\n\r\nYou would then use the pipe in your template like this:\r\n{{ someLongText | truncate:20:false }}\r\n */\r\n\r\n\r\n","export interface DialogPayload {\r\n\ttitle?: string;\r\n\ttext?: string;\r\n\tdata?: any;\r\n}\r\n\r\nexport interface DialogAction {\r\n\tlabel : string;\r\n\tvalue : DialogActionValue\r\n}\r\n\r\nexport type DialogActionValue = 'edit' | 'delete';\r\n\r\nexport interface ActionSelected{\r\n\toriginalEvent : PointerEvent\r\n\tvalue : DialogActionValue;\r\n}\r\n\r\n\r\nexport const DIALOG_ACTION = {\r\n\tEDIT : 'edit' as const,\r\n\tDELETE : 'delete' as const\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpBackend, HttpClient } from '@angular/common/http';\r\n\r\nexport interface IAppConfig {\r\n  api: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AppConfigService {\r\n  private _dotEnv!: IAppConfig;\r\n\r\n  constructor(private _handler: HttpBackend) {}\r\n\r\n  get dotEnv() : IAppConfig{\r\n    return this._dotEnv;\r\n  }\r\n\r\n  // Método para cargar el archivo de configuración\r\n  public loadConfig(): Promise<void> {\r\n    const http = new HttpClient(this._handler);\r\n\r\n    return http\r\n      .get<IAppConfig>('/assets/.env')\r\n      .toPromise()\r\n      .then((response) => {\r\n        if (response) this._dotEnv = response;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AppConfigService } from './app-config.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private appConfigService: AppConfigService\r\n  ) {}\r\n\r\n  get<T>(url: string, params: HttpParams = new HttpParams()): Observable<T> {\r\n    return this.http.get<T>(`${this.api}${url}`, {\r\n      headers: this.headers,\r\n      params,\r\n    });\r\n  }\r\n\r\n  post<T, D>(url: string, data?: D): Observable<T> {\r\n    return this.http.post<T>(`${this.api}${url}`, JSON.stringify(data), {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  put<T, D>(url: string, data: D): Observable<T> {\r\n    return this.http.put<T>(`${this.api}${url}`, JSON.stringify(data), {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  delete<T>(url: string): Observable<T> {\r\n    return this.http.delete<T>(`${this.api}${url}`, {\r\n      headers: this.headers,\r\n    });\r\n  }\r\n\r\n  get headers(): HttpHeaders {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n    };\r\n\r\n    return new HttpHeaders(headersConfig);\r\n  }\r\n\r\n  get api() {\r\n    return this.appConfigService.dotEnv.api;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject, Subject} from 'rxjs';\r\nimport {Dialog, DialogType, InitialDialogState} from \"@core\";\r\nimport {DialogPayload} from \"../utils\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n  private dialogStateTracker$ = new BehaviorSubject<Dialog>(InitialDialogState);\r\n  private payloadState$ = new BehaviorSubject<DialogPayload | null>(null);\r\n  \r\n  dialog$ = this.dialogStateTracker$.asObservable();\r\n  payload$ = this.payloadState$.asObservable();\r\n  \r\n  openDialog(dialogType: DialogType, payload: DialogPayload | null = null): void {\r\n    this.payloadState$.next(payload);\r\n    this.dialogStateTracker$.next({ ...this.dialogStateTracker$.value, [dialogType]: true });\r\n  }\r\n  \r\n  closeDialog(dialogType: DialogType): void {\r\n    this.payloadState$.next(null);\r\n    this.dialogStateTracker$.next({ ...this.dialogStateTracker$.value, [dialogType]: false });\r\n  }\r\n  \r\n  get data() : any | null {\r\n    return this.payloadState$.value?.data;\r\n  }\r\n  \r\n  get payload() : DialogPayload | null {\r\n    return this.payloadState$.value;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { createAction, props } from '@ngrx/store';\r\n\r\nexport const throw401Error = createAction('[ngrx-error] THROW_401_ERROR', props<{ error: HttpErrorResponse }>());\r\nexport const throw403Error = createAction('[ngrx-error] THROW_403_ERROR', props<{ error: HttpErrorResponse }>());\r\nexport const throw404Error = createAction('[ngrx-error] THROW_404_ERROR', props<{ error: HttpErrorResponse }>());\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\r\nimport { tap } from 'rxjs/operators';\r\nimport * as ErrorHandlerActions from './error-handler.actions';\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Injectable()\r\nexport class ErrorHandlerEffects {\r\n  on401$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(ErrorHandlerActions.throw401Error),\r\n        tap(({error}) => this.toast.error(error.error,\"Not Authorized\")),\r\n        tap(() => this.router.navigate(['/private/articles'])),\r\n      ),\r\n    { dispatch: false },\r\n  );\r\n  \r\n  on403$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(ErrorHandlerActions.throw403Error),\r\n        tap(() => this.router.navigate(['/access-denied'])),\r\n      ),\r\n    { dispatch: false },\r\n  );\r\n\r\n  on404$ = createEffect(\r\n    () =>\r\n      this.actions$.pipe(\r\n        ofType(ErrorHandlerActions.throw404Error),\r\n        tap(() => this.router.navigate(['/not-found'])),\r\n      ),\r\n    { dispatch: false },\r\n  );\r\n\r\n  constructor(private readonly actions$: Actions, private readonly router: Router, private toast : ToastrService) {}\r\n}\r\n","import { createFeature, createReducer, on } from '@ngrx/store';\r\nimport * as ErrorHandlerActions from './error-handler.actions';\r\n\r\nexport interface ErrorHandlerState {\r\n  code: number;\r\n  message: string | undefined;\r\n}\r\n\r\nexport const errorHandlerInitialState: ErrorHandlerState = {\r\n  message: undefined,\r\n  code: -1,\r\n};\r\n\r\nexport const errorHandlerFeature = createFeature({\r\n  name: 'errorHandler',\r\n  reducer: createReducer(\r\n    errorHandlerInitialState,\r\n    on(ErrorHandlerActions.throw403Error, ErrorHandlerActions.throw401Error, ErrorHandlerActions.throw404Error, (state, action) => ({\r\n      code: action.error.status,\r\n      message: action.error.message,\r\n    })),\r\n  ),\r\n});\r\n","import { HttpErrorResponse, HttpEvent, HttpHandlerFn, HttpRequest } from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport {throw401Error, throw403Error, throw404Error} from \"./store\";\r\n\r\nexport const errorHandlingInterceptor = (\r\n  request: HttpRequest<any>,\r\n  next: HttpHandlerFn,\r\n): Observable<HttpEvent<any>> => {\r\n  const store = inject(Store);\r\n\r\n  return next(request).pipe(\r\n    catchError((error) => {\r\n      if (error instanceof HttpErrorResponse) {\r\n        switch (error.status) {\r\n          case 401:\r\n            store.dispatch(throw401Error({ error }));\r\n            break;\r\n          case 403:\r\n            store.dispatch(throw403Error({ error }));\r\n            break;\r\n          case 404:\r\n            store.dispatch(throw404Error({ error }));\r\n            break;\r\n          case 0:\r\n            console.log(\"ooOps something went wrong\")\r\n            break;\r\n          default:\r\n            throwError(error);\r\n            break;\r\n        }\r\n      }\r\n      return throwError(error);\r\n    }),\r\n  );\r\n};\r\n","/*\r\n * Public API Surface of core\r\n */\r\n\r\nexport * from './lib/utils'\r\nexport * from './lib/services'\r\nexport * from './lib/utils'\r\nexport * from './lib/error-handler'\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["REGEX","i2.AppConfigService","InitialDialogState","ErrorHandlerActions.throw401Error","ErrorHandlerActions.throw403Error","ErrorHandlerActions.throw404Error","i1"],"mappings":"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"}