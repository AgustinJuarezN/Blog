{"version":3,"file":"ui-components.mjs","sources":["../../../projects/ui-components/src/lib/modules/fields/text-field/text-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/text-field/text-field.component.html","../../../projects/ui-components/src/lib/modules/fields/fields.module.ts","../../../projects/ui-components/src/lib/modules/fields/text-field/text-field.module.ts","../../../projects/ui-components/src/lib/modules/fields/number-field/number-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/number-field/number-field.component.html","../../../projects/ui-components/src/lib/modules/fields/number-field/number-field.module.ts","../../../projects/ui-components/src/lib/modules/fields/checkbox-field/checkbox-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/checkbox-field/checkbox-field.component.html","../../../projects/ui-components/src/lib/modules/fields/checkbox-field/checkbox-field.module.ts","../../../projects/ui-components/src/lib/modules/fields/date-field/date-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/date-field/date-field.component.html","../../../projects/ui-components/src/lib/modules/fields/date-field/date-field.module.ts","../../../projects/ui-components/src/lib/modules/fields/select-field/select-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/select-field/select-field.component.html","../../../projects/ui-components/src/lib/modules/fields/select-field/select-field.module.ts","../../../projects/ui-components/src/lib/modules/fields/text-area-field/text-area-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/text-area-field/text-area-field.component.html","../../../projects/ui-components/src/lib/modules/fields/text-area-field/text-area-field.module.ts","../../../projects/ui-components/src/lib/modules/fields/file-upload-field/file-upload-field.component.ts","../../../projects/ui-components/src/lib/modules/fields/file-upload-field/file-upload-field.component.html","../../../projects/ui-components/src/lib/modules/fields/file-upload-field/file-upload-field.module.ts","../../../projects/ui-components/src/lib/modules/data/loading/loading.component.ts","../../../projects/ui-components/src/lib/modules/data/loading/loading.component.html","../../../projects/ui-components/src/lib/modules/data/loading/loading.module.ts","../../../projects/ui-components/src/lib/modules/fields/form/shared/validators/data-range.validator.ts","../../../projects/ui-components/src/lib/modules/fields/form/shared/validators/password-strength.validator.ts","../../../projects/ui-components/src/lib/modules/fields/form/shared/constants/index.ts","../../../projects/ui-components/src/lib/modules/fields/form/state/form-service.ts","../../../projects/ui-components/src/lib/modules/fields/form/dynamic-form/dynamic-form.component.ts","../../../projects/ui-components/src/lib/modules/fields/form/dynamic-form/dynamic-form.component.html","../../../projects/ui-components/src/lib/modules/fields/form/dynamic-form.module.ts","../../../projects/ui-components/src/lib/modules/fields/form/state/forms.actions.ts","../../../projects/ui-components/src/lib/modules/fields/form/state/forms.reducer.ts","../../../projects/ui-components/src/lib/modules/fields/form/state/forms.selectors.ts","../../../projects/ui-components/src/lib/modules/fields/form/state/forms.effects.ts","../../../projects/ui-components/src/public-api.ts","../../../projects/ui-components/src/ui-components.ts"],"sourcesContent":["// Angular Core\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n// Angular Forms\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\n// RxJs\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'custom-text-field',\r\n  templateUrl: './text-field.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: TextFieldComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class TextFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n  \r\n  @Input() placeholder : string | undefined = '';\r\n  @Input() inputId!: string;\r\n  @Input('readonly') isReadOnly = false;\r\n  @Input() disabled = false;\r\n  @Input() iconPosition: 'right' | 'left'| undefined | null = null;\r\n  @Input() type: 'text' | 'password' | 'email'| undefined = \"text\";\r\n  @Input() icon: string | undefined | null = null;\r\n  @Input() loading$ !: Observable<any>\r\n  \r\n  \r\n  public formControl: FormControl = new FormControl<string | null>(\r\n    '',\r\n  );\r\n\r\n  private _componentDestroyed$ = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this._componentDestroyed$))\r\n      .subscribe((value) => {\r\n        this.onChange(value);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._componentDestroyed$.next();\r\n    this._componentDestroyed$.complete();\r\n  }\r\n\r\n  public onChange = (value: string) => {};\r\n  public onTouched = () => {};\r\n\r\n  public writeValue(value: string): void {\r\n    this.formControl.setValue(value);\r\n  }\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(isDisabled: boolean): void {\r\n    isDisabled ? this._disableFormControl() : this._enableFormControl();\r\n  }\r\n\r\n  public onBlur(): void {\r\n    this.onTouched();\r\n  }\r\n\r\n  private _enableFormControl(): void {\r\n    this.formControl.enable({ emitEvent: false });\r\n  }\r\n\r\n  private _disableFormControl(): void {\r\n    this.formControl.disable({ emitEvent: false });\r\n  }\r\n}\r\n","<span\r\n  [class.p-input-icon-left]=\"this.iconPosition === 'left' || (this.icon && this.iconPosition !== 'right')\"\r\n  [class.p-input-icon-right]=\"this.iconPosition === 'right'\"\r\n>\r\n  <i *ngIf=\"(this.loading$ | async) === 'PENDING'\" class=\"pi pi-spinner pi-spin\"></i>\r\n  <i *ngIf=\"(this.loading$ | async) !== 'PENDING'&& this.icon\" class=\"pi {{ icon }}\"></i>\r\n\r\n  <input\r\n    *ngIf=\"!this.isReadOnly; else readOnlyTemplate\"\r\n    [formControl]=\"this.formControl\"\r\n    [type]=\"this.type\"\r\n    [id]=\"this.inputId\"\r\n    [placeholder]=\"this.placeholder\"\r\n    [attr.disabled]=\"this.disabled ? true : null\"\r\n    class=\"input\"\r\n    pInputText\r\n    (blur)=\"onBlur()\"\r\n  />\r\n</span>\r\n\r\n\r\n<ng-template #readOnlyTemplate>\r\n  <div class=\"read-only-template\">\r\n    <span\r\n      *ngIf=\"this.formControl.value; else emptyValueTemplate\"\r\n      class=\"read-only-template__value\"\r\n      >{{ this.formControl.value }}</span\r\n    >\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #emptyValueTemplate>\r\n  <span class=\"read-only-template__value--empty\">-</span>\r\n</ng-template>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst modules = [CommonModule, ReactiveFormsModule];\r\n\r\n@NgModule({\r\n  imports: [...modules],\r\n  exports: [...modules],\r\n})\r\nexport class FieldsModule {}\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\n// Prime\r\nimport { InputTextModule } from 'primeng/inputtext';\r\n// Component\r\nimport { TextFieldComponent } from './text-field.component';\r\nimport {FieldsModule} from \"../fields.module\";\r\n\r\n@NgModule({\r\n  imports: [FieldsModule, InputTextModule],\r\n  declarations: [TextFieldComponent],\r\n  exports: [TextFieldComponent],\r\n})\r\nexport class TextFieldModule {}\r\n","// Angular Core\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n// Angular Forms\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'custom-number-field',\r\n  templateUrl: './number-field.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: NumberFieldComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class NumberFieldComponent implements  OnInit, OnDestroy,ControlValueAccessor {\r\n  // P-Input API\r\n  @Input() placeholder: string = \"\"\r\n\r\n  @Input() minFractionDigits = 0;\r\n  @Input() maxFractionDigits = 0;\r\n\r\n  @Input() min = Number.MIN_VALUE;\r\n  @Input() max = Number.MAX_VALUE;\r\n\r\n  @Input() maxLength = 0;\r\n  @Input() locale = 'de-DE';\r\n\r\n  @Input() prefix = '';\r\n  @Input() suffix = '';\r\n  @Input() set disabled(disabled: boolean) {\r\n    disabled ? this._disableFormControl() : this._enableFormControl()\r\n  }\r\n\r\n  @Input() useGrouping = true;\r\n  @Input() inputId!: string;\r\n\r\n  // Custom SBI API\r\n  @Input('readonly') isReadOnly = false;\r\n\r\n  // Reference to the formControl that Im accessing\r\n  // (this is the value of the formControl inside the p-inputNumber\r\n  public formControl = new FormControl<number | null>(null);\r\n  public isDisabled = false;\r\n\r\n  public onChange = (value: number | null) => {};\r\n  public onTouched = () => {};\r\n\r\n  private _destroyed$ = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this._destroyed$))\r\n      .subscribe(value => {\r\n         this.onChange(value);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._destroyed$.next();\r\n    this._destroyed$.complete();\r\n  }\r\n\r\n  public writeValue(value: number): void {\r\n    if(value) this.formControl.setValue(value);\r\n  }\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(disabled: boolean): void {\r\n    disabled ? this._disableFormControl() : this._enableFormControl();\r\n  }\r\n\r\n  // On browser Blur event Im marking my formControl as touched\r\n  public onBlur(): void {\r\n    this.onTouched();\r\n  }\r\n\r\n  private _enableFormControl() : void{\r\n    this.formControl.enable({ emitEvent: false });\r\n  }\r\n\r\n  private _disableFormControl() : void {\r\n    this.formControl.disable({ emitEvent: false });\r\n  }\r\n}\r\n","<p-inputNumber\r\n  *ngIf=\"!this.isReadOnly; else readOnlyTemplate\"\r\n  [formControl]=\"this.formControl\"\r\n  [inputId]=\"this.inputId\"\r\n  [placeholder]=\"this.placeholder\"\r\n  [locale]=\"this.locale\"\r\n  [minFractionDigits]=\"this.minFractionDigits\"\r\n  [maxFractionDigits]=\"this.maxFractionDigits\"\r\n  [min]=\"this.min\"\r\n  [max]=\"this.max\"\r\n  [prefix]=\"this.prefix\"\r\n  [suffix]=\"this.suffix\"\r\n  (onBlur)=\"onBlur()\"\r\n></p-inputNumber>\r\n<ng-template #readOnlyTemplate>\r\n  <div class=\"read-only-template\">\r\n    <span\r\n      *ngIf=\"this.formControl.value; else emptyValueTemplate\"\r\n      class=\"read-only-template__value\"\r\n      >{{this.prefix}} {{ this.formControl.value }} {{this.suffix}}</span\r\n    >\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #emptyValueTemplate>\r\n  <span class=\"read-only-template__value--empty\">-</span>\r\n</ng-template>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\n// Prime\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\n// Component\r\nimport {NumberFieldComponent} from \"./number-field.component\";\r\nimport {FieldsModule} from \"../fields.module\";\r\n\r\n@NgModule({\r\n  imports: [FieldsModule, InputNumberModule],\r\n  declarations: [NumberFieldComponent],\r\n  exports: [NumberFieldComponent],\r\n})\r\nexport class NumberFieldModule {}\r\n","// Angular Core\r\nimport { Component, Input } from '@angular/core';\r\n// Angular Forms\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\nimport {takeUntil} from \"rxjs/operators\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'custom-checkbox-field',\r\n  templateUrl: './checkbox-field.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: CheckboxFieldComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class CheckboxFieldComponent implements ControlValueAccessor {\r\n  \r\n  @Input('readonly') isReadOnly = false;\r\n  @Input() inputId !: string;\r\n  @Input() label = \"\";\r\n  @Input() disabled = false;\r\n\r\n  private componentDestroyed$ = new Subject<void>();\r\n  public formControl = new FormControl(false);\r\n  \r\n  public onChange = (value: boolean | null) => {};\r\n  public onTouched = () => {};\r\n  \r\n  ngOnInit(): void {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this.componentDestroyed$))\r\n      .subscribe(value => {\r\n        this.onChange(value);\r\n      });\r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n    this.componentDestroyed$.next();\r\n    this.componentDestroyed$.complete();\r\n  }\r\n  \r\n  \r\n  public writeValue(value: boolean): void {\r\n    this.formControl.setValue(value);\r\n  }\r\n  \r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  \r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n  \r\n  public setDisabledState?(isDisabled: boolean): void {\r\n    isDisabled ? this._disableFormControl() : this._enableFormControl();\r\n  }\r\n\r\n  public onCheckChange(): void {\r\n    this.onTouched();\r\n  }\r\n\r\n  private _enableFormControl(): void {\r\n    this.formControl.enable({ emitEvent: false });\r\n  }\r\n\r\n  private _disableFormControl(): void {\r\n    this.formControl.disable({ emitEvent: false });\r\n  }\r\n  \r\n}\r\n","<div class=\"checkbox-template\">\r\n  <p-checkbox\r\n    *ngIf=\"!this.isReadOnly; else readOnlyTemplate\"\r\n    [binary]=\"true\"\r\n    [disabled]=\"this.disabled\"\r\n    [formControl]=\"this.formControl\"\r\n    [inputId]=\"this.inputId\"\r\n    [label]=\"this.label\"\r\n    (onChange)=\"this.onCheckChange()\"\r\n  >\r\n  </p-checkbox>\r\n</div>\r\n\r\n<ng-template #readOnlyTemplate>\r\n  <div>\r\n    <span *ngIf=\"this.formControl.value\"><i class=\"pi pi-check\"></i></span>\r\n    <span *ngIf=\"!this.formControl.value\"><i class=\"pi pi-times\"></i></span>\r\n  </div>\r\n</ng-template>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\n// Prime\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\n// Component\r\nimport { CheckboxFieldComponent } from './checkbox-field.component';\r\nimport {FieldsModule} from \"../fields.module\";\r\n\r\n@NgModule({\r\n  declarations: [CheckboxFieldComponent],\r\n  imports: [FieldsModule, CheckboxModule],\r\n  exports: [CheckboxFieldComponent],\r\n})\r\nexport class CheckboxFieldModule {}\r\n","// Angular Core\r\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\n// Angular Forms\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\n// Interfaces\r\nimport { CalendarTypeView } from 'primeng/calendar';\r\n// RxJs\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'custom-date-field',\r\n  templateUrl: './date-field.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: DateFieldComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n  styles: [`\r\n  `]\r\n})\r\nexport class DateFieldComponent\r\n  implements OnInit, OnDestroy, ControlValueAccessor\r\n{\r\n  @Input('readonly') isReadOnly = false;\r\n  @Input() inputId!: string;\r\n  @Input() disabled = false;\r\n\r\n  @Input() showIcon = true;\r\n  @Input('min') minDate: Date = new Date(0);\r\n  @Input('max') maxDate!: Date;\r\n  @Input('format') dateFormat = 'dd/mm/yy';\r\n  @Input() view: CalendarTypeView = 'date';\r\n  @Input() placeholder!: string;\r\n\r\n  public formControl = new FormControl<Date | null>(null);\r\n  public isDisabled = false;\r\n\r\n  public onChange = (value: Date | null) => {};\r\n  public onTouched = () => {};\r\n\r\n  private _componentDestroyed$ = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this._componentDestroyed$))\r\n      .subscribe((value) => this.onChange(value));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._componentDestroyed$.next();\r\n    this._componentDestroyed$.complete();\r\n  }\r\n\r\n  public writeValue(value: Date): void {\r\n    this.formControl.setValue(value);\r\n  }\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(isDisabled: boolean): void {\r\n    isDisabled ? this._disableFormControl() : this._enableFormControl();\r\n  }\r\n\r\n  public onBlur(): void {\r\n    this.onTouched();\r\n  }\r\n\r\n  private _enableFormControl(): void {\r\n    this.formControl.enable({ emitEvent: false });\r\n  }\r\n\r\n  private _disableFormControl(): void {\r\n    this.formControl.disable({ emitEvent: false });\r\n  }\r\n}\r\n","<p-calendar\r\n  *ngIf=\"!this.isReadOnly; else readOnlyTemplate\"\r\n  [formControl]=\"this.formControl\"\r\n  [inputId]=\"this.inputId\"\r\n  [dateFormat]=\"this.dateFormat\"\r\n  [placeholder]=\"this.placeholder\"\r\n  [showIcon]=\"this.showIcon\"\r\n  [minDate]=\"this.minDate\"\r\n  [maxDate]=\"this.maxDate\"\r\n  [view]=\"this.view\"\r\n  [disabled]=\"this.disabled\"\r\n  (onBlur)=\"onBlur()\"\r\n  class=\"treetableDate\"\r\n>\r\n</p-calendar>\r\n\r\n\r\n<ng-template #readOnlyTemplate>\r\n  <div class=\"read-only-template\">\r\n    <span\r\n      *ngIf=\"this.formControl.value; else emptyValueTemplate\"\r\n      class=\"read-only-template__value\"\r\n    >\r\n      {{ this.formControl.value | date : 'dd/MM/yyyy' }}\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #emptyValueTemplate>\r\n  <span class=\"read-only-template__value--empty\">-</span>\r\n</ng-template>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\n// Prime\r\nimport { CalendarModule } from 'primeng/calendar';\r\n// Component\r\nimport { DateFieldComponent } from './date-field.component';\r\nimport {FieldsModule} from \"../fields.module\";\r\n\r\n@NgModule({\r\n  declarations: [DateFieldComponent],\r\n  imports: [FieldsModule, CalendarModule],\r\n  exports: [DateFieldComponent],\r\n})\r\nexport class DateFieldModule {}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nexport interface IOption {\r\n  id: any;\r\n  description: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'custom-select-field',\r\n  templateUrl: './select-field.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: SelectFieldComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class SelectFieldComponent\r\n  implements OnInit, OnDestroy, ControlValueAccessor\r\n{\r\n  @Input('readonly') isReadOnly: boolean = false;\r\n  @Input() inputId!: string;\r\n  @Input() options: IOption[] = [];\r\n  @Input() multiSelect = false;\r\n  @Input() disabled = false;\r\n  @Input() showClear = false\r\n\r\n  @Input() placeholder !: string;\r\n  \r\n  public formControl = new FormControl<IOption | IOption[] | null>(null);\r\n  public displayValue: any;\r\n  public hasValue: boolean = false;\r\n\r\n  private _componentDestroyed$ = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this._componentDestroyed$))\r\n      .subscribe((value) => {\r\n        this.displayValue = value;\r\n        this.hasValue = Array.isArray(value) ? !!value.length : !!value;\r\n        this.onChange(value);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._componentDestroyed$.next();\r\n    this._componentDestroyed$.complete();\r\n  }\r\n\r\n  public onChange = (value: any | any[] | null) => {};\r\n  public onTouched = () => {};\r\n  \r\n  \r\n  public writeValue(value: any | any[]): void {\r\n    if (Array.isArray(value)) {\r\n      // MultiSelect\r\n      const fullOptions = value.map(id => this.getFullOptionFromId(id));\r\n      this.formControl.setValue(fullOptions as IOption[]);\r\n    } else {\r\n      // Select\r\n      const fullOption = this.getFullOptionFromId(value);\r\n      this.formControl.setValue(fullOption);\r\n    }\r\n  }\r\n  \r\n  public registerOnChange(fn: any): void {\r\n    this.onChange = (value: IOption | IOption[] | null) => {\r\n      if (Array.isArray(value)) {\r\n        const ids = value.map(option => this.getIdFromOption(option));\r\n        fn(ids);\r\n      } else {\r\n        const id = this.getIdFromOption(value!);\r\n        fn(id);\r\n      }\r\n    };\r\n  }\r\n  \r\n  // Busco en la lista de opciones la opción cuyo ID coincide con el que proporcionamos.\r\n  // Si no encontramos una opción que coincida, retorno null.\r\n  private getFullOptionFromId(id: any): IOption | null{\r\n    return this.options.find(option => option.id === id) || null;\r\n  }\r\n  \r\n  private getIdFromOption(option: IOption): any {\r\n    return option ? option.id : null;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public setDisabledState?(isDisabled: boolean): void {\r\n    isDisabled ? this._disableFormControl() : this._enableFormControl();\r\n  }\r\n\r\n  private _enableFormControl(): void {\r\n    this.formControl.enable({ emitEvent: false });\r\n  }\r\n\r\n  private _disableFormControl(): void {\r\n    this.formControl.disable({ emitEvent: false });\r\n  }\r\n}\r\n","<ng-container *ngIf=\"!this.isReadOnly; else readOnlyTemplate\">\r\n  <p-multiSelect\r\n    *ngIf=\"this.multiSelect; else singleSelectTemplate\"\r\n    [options]=\"this.options\"\r\n    [formControl]=\"this.formControl\"\r\n    [defaultLabel]=\"this.placeholder || 'Seleccione una o multiples opciones'\"\r\n    dataKey=\"id\"\r\n    optionLabel=\"description\"\r\n    display=\"chip\"\r\n    [readonly]=\"this.isReadOnly\"\r\n    [inputId]=\"this.inputId\"\r\n    [disabled]=\"this.disabled\"\r\n    (onChange)=\"this.onTouched()\"\r\n    (onPanelHide)=\"this.onTouched()\"\r\n  >\r\n  </p-multiSelect>\r\n  <ng-template #singleSelectTemplate>\r\n    <p-dropdown\r\n      [options]=\"this.options\"\r\n      [formControl]=\"this.formControl\"\r\n      [showClear]=\"this.showClear\"\r\n      [placeholder]=\"this.placeholder || 'Seleccione una opción'\"\r\n      dataKey=\"id\"\r\n      optionLabel=\"description\"\r\n      [readonly]=\"this.isReadOnly\"\r\n      [inputId]=\"this.inputId\"\r\n      [disabled]=\"this.disabled\"\r\n      (onChange)=\"this.onTouched()\"\r\n      (onHide)=\"this.onTouched()\"\r\n    >\r\n    </p-dropdown>\r\n  </ng-template>\r\n</ng-container>\r\n\r\n<ng-template #readOnlyTemplate>\r\n  <div class=\"read-only-template\">\r\n    <ng-container *ngIf=\"this.multiSelect; else singleSelectTemplate\">\r\n      <ul\r\n        *ngIf=\"this.displayValue && this.displayValue.length; else emptyValueTemplate\"\r\n        class=\"read-only-template__list\"\r\n      >\r\n        <li\r\n          *ngFor=\"let value of displayValue\"\r\n          class=\"read-only-template__list--item\"\r\n        >\r\n          {{ value.description }}\r\n        </li>\r\n      </ul>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #singleSelectTemplate>\r\n  <span\r\n    *ngIf=\"this.displayValue; else emptyValueTemplate\"\r\n    class=\"read-only-template__value\"\r\n    >{{ this.displayValue.description }}</span\r\n  >\r\n</ng-template>\r\n\r\n<ng-template #emptyValueTemplate>\r\n  <span class=\"read-only-template__value--empty\">-</span>\r\n</ng-template>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\n// Prime\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n// Component\r\nimport { SelectFieldComponent } from './select-field.component';\r\nimport {FieldsModule} from \"../fields.module\";\r\n\r\n@NgModule({\r\n  declarations: [SelectFieldComponent],\r\n  imports: [FieldsModule, MultiSelectModule, DropdownModule],\r\n  exports: [SelectFieldComponent],\r\n})\r\nexport class SelectFieldModule {}\r\n","import {Component, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {Subject} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'custom-text-area-field',\r\n  templateUrl: './text-area-field.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: TextAreaFieldComponent,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class TextAreaFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n  @Input('readonly') isReadOnly: boolean = false;\r\n  @Input() placeholder = \"\";\r\n  @Input() inputId !: string;\r\n\r\n  isDisabled: boolean = false;\r\n\r\n  formControl: FormControl = new FormControl('');\r\n\r\n  onChange = (value: string) => {};\r\n  onTouched = () => {};\r\n\r\n  private _componentDestroyed$ = new Subject<void>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this._componentDestroyed$))\r\n      .subscribe(value => {\r\n        this.onChange(value);\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._componentDestroyed$.next();\r\n    this._componentDestroyed$.complete();\r\n  }\r\n\r\n  writeValue(value: string): void {\r\n    this.formControl.setValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    isDisabled ? this.formControl.disable({ emitEvent: false }) : this.formControl.enable({ emitEvent: false });\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.onTouched();\r\n  }\r\n}\r\n","<textarea\r\n  *ngIf=\"!isReadOnly; else readOnlyTemplate\"\r\n  [formControl]=\"formControl\"\r\n  pInputTextarea\r\n  [id]=\"this.inputId\"\r\n  [placeholder]=\"this.placeholder\"\r\n  (blur)=\"onBlur()\"\r\n  rows=\"5\"\r\n  cols=\"30\"\r\n>\r\n</textarea>\r\n\r\n<ng-template #readOnlyTemplate>\r\n  <div class=\"read-only-template\">\r\n    <span\r\n      *ngIf=\"this.formControl.value; else emptyValueTemplate\"\r\n      class=\"read-only-template__value\"\r\n    >{{ this.formControl.value }}</span\r\n    >\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #emptyValueTemplate>\r\n  <span class=\"read-only-template__value--empty\">-</span>\r\n</ng-template>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\nimport {TextAreaFieldComponent} from './text-area-field.component';\r\nimport {InputTextareaModule} from 'primeng/inputtextarea';\r\nimport {FieldsModule} from \"../fields.module\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [TextAreaFieldComponent],\r\n  imports: [FieldsModule, InputTextareaModule],\r\n  exports: [TextAreaFieldComponent],\r\n})\r\nexport class TextAreaFieldModule {}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  NG_VALUE_ACCESSOR,\r\n} from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nexport interface CustomFileUpload {\r\n  data: string /* Base64 */;\r\n  name: string;\r\n  type: string /*   png   */;\r\n  category: string /*  image  */;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'custom-file-upload',\r\n  templateUrl: './file-upload-field.component.html',\r\n  styles: [`\r\n    .drop-zone {\r\n      width: 100%;\r\n      height: 150px;\r\n      border: 2px dashed #ccc;\r\n      text-align: center;\r\n      padding: 20px;\r\n      cursor: pointer;\r\n      border-radius: 6px;\r\n    }\r\n\r\n    .preview-container{\r\n      display : flex;\r\n      flex-direction: column;\r\n    }\r\n    .preview{\r\n      display: flex;\r\n      align-items: center;\r\n      width: 100%;\r\n      column-gap: 20px;\r\n      margin-bottom: 10px;\r\n      padding: 12px 10px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n      background-color: #fff;\r\n      box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n    }\r\n    .preview:last-child {\r\n      margin-bottom: 19px;\r\n    }\r\n    \r\n    .preview p{\r\n      margin-bottom: 10px;\r\n      text-align: center;\r\n      color: #333;\r\n      font-size: 16px;\r\n    }\r\n    .preview img{\r\n      width: 80px;\r\n      height: 60px;\r\n    }\r\n    \r\n    .preview-container .button{\r\n      margin-left: auto;\r\n    }\r\n    \r\n    .file-input{\r\n      display: none !important;\r\n    }\r\n    \r\n    .p-placeholder{\r\n      color: #b3b3b3;\r\n    }\r\n\r\n\r\n  `],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: FileUploadFieldComponent,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class FileUploadFieldComponent implements  OnInit, OnDestroy, ControlValueAccessor {\r\n  \r\n  @Input() accept  = \"image/*, audio/*, video/*\"\r\n  @Input() placeholder !: string;\r\n  \r\n  onFileDrop(event: DragEvent) {\r\n    event.preventDefault();\r\n    const file = event.dataTransfer?.files.item(0);\r\n    this.addFile(file)\r\n  }\r\n  \r\n  onFileInput(event: Event): void {\r\n    const file = (event.target as HTMLInputElement).files?.item(0);\r\n    this.addFile(file)\r\n  }\r\n  \r\n  async addFile(file : File | null | undefined){\r\n    if (file){\r\n      try {\r\n        const uploadFile = await this.parseToUploadFile(file);\r\n        const files : CustomFileUpload[] = this.formControl.value ? [...this.formControl.value , uploadFile] : [uploadFile];\r\n        this.formControl.setValue(files);\r\n      } catch (error) {\r\n        console.error('Error converting file to upload format', error);\r\n      }\r\n    }\r\n  }\r\n  \r\n  parseToUploadFile(file: File): Promise<CustomFileUpload> {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onloadend = function() {\r\n        if (reader.result) {\r\n          resolve({\r\n            data: reader.result.toString(),  // full base64 string\r\n            name: file.name,\r\n            type: file.type.split('/')[1],   // split and get 'png' from 'image/png'\r\n            category: file.type.split('/')[0]   // split and get 'image' from 'image/png'\r\n          });\r\n        } else {\r\n          reject(new Error('Error reading file'));\r\n        }\r\n      }\r\n      \r\n      reader.onerror = function() {\r\n        reject(new Error('Error reading file'));\r\n      }\r\n      \r\n      reader.readAsDataURL(file);\r\n    });\r\n  }\r\n  \r\n  onDragOver(event: DragEvent) {\r\n    event.preventDefault();\r\n  }\r\n  \r\n  public formControl = new FormControl<CustomFileUpload[]>([], {\r\n    nonNullable : true\r\n  });\r\n  \r\n  public onChange = (value: CustomFileUpload[]) => {};\r\n  public onTouched = () => {};\r\n  private _componentDestroyed$ = new Subject<void>();\r\n  \r\n  \r\n  ngOnInit() {\r\n    this.formControl.valueChanges\r\n      .pipe(takeUntil(this._componentDestroyed$))\r\n      .subscribe((value) => this.onChange(value)\r\n      );\r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n    this._componentDestroyed$.next();\r\n    this._componentDestroyed$.complete();\r\n  }\r\n  \r\n  \r\n  \r\n  removeFile(file : CustomFileUpload){\r\n     const currentFiles = this.formControl.value;\r\n     const updatedFiles = currentFiles.filter((f) => f !== file);\r\n     this.formControl.setValue(updatedFiles)\r\n  }\r\n  \r\n  \r\n  \r\n  // El problema es que cuando hago new value : File[]\r\n  // pero cuando edito es de tipo : string[] (base 64)\r\n  writeValue( files : CustomFileUpload[]) {\r\n    this.formControl.setValue(files)\r\n  }\r\n  \r\n  registerOnChange( fn: any ) {\r\n    this.onChange = fn;\r\n  }\r\n  \r\n  registerOnTouched( fn: any ) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n}\r\n","<div >\r\n\r\n  <div class=\"drop-zone\" (drop)=\"onFileDrop($event)\" (dragover)=\"onDragOver($event)\" (click)=\"fileUploadInput.click()\">\r\n    <p>Click or Drag and drop files here</p>\r\n    <p class=\"p-placeholder\">{{this.placeholder}}</p>\r\n  </div>\r\n\r\n  <input type=\"file\" (change)=\"onFileInput($event)\" #fileUploadInput class=\"file-input\"  [accept]=\"this.accept\" />\r\n\r\n\r\n  <div class=\"preview-container\">\r\n    <ng-container *ngFor=\"let file of this.formControl.value\">\r\n    <div class=\"preview\" [ngSwitch]=\"file.category\">\r\n      <ng-container  *ngSwitchCase=\"'image'\">\r\n        <img [src]=\"file.data\" alt=\"Image Preview\" />\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'application'\">\r\n        <p>Application || {{file.name}} - {{file.type}}</p>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'audio'\">\r\n        <p>audio</p>\r\n      </ng-container>\r\n      <ng-container *ngSwitchCase=\"'video'\">\r\n        <p>video</p>\r\n      </ng-container>\r\n      <ng-container *ngSwitchDefault>\r\n        <div>File Preview Not Supported</div>\r\n      </ng-container>\r\n      <label>{{file?.name}}</label>\r\n      <p-button icon=\"pi pi-times\" styleClass=\"p-button-rounded p-button-danger p-button-text p-button-sm\" class=\"button\" (click)=\"removeFile(file)\"></p-button>\r\n\r\n    </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","// Modules\r\nimport { NgModule } from '@angular/core';\r\n// Component\r\nimport {FileUploadFieldComponent} from './file-upload-field.component';\r\n// PrimeNG\r\nimport {FileUploadModule} from 'primeng/fileupload';\r\nimport {AsyncPipe, NgForOf, NgIf, NgSwitch, NgSwitchCase, NgSwitchDefault} from '@angular/common';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {DragDropModule} from 'primeng/dragdrop';\r\nimport {GalleriaModule} from \"primeng/galleria\";\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tFileUploadModule,\r\n\t\tNgForOf,\r\n\t\tReactiveFormsModule,\r\n\t\tNgIf,\r\n\t\tNgSwitch,\r\n\t\tNgSwitchCase,\r\n\t\tAsyncPipe,\r\n\t\tDragDropModule,\r\n\t\tNgSwitchDefault,\r\n\t\tGalleriaModule,\r\n\t],\r\n  declarations: [FileUploadFieldComponent],\r\n  exports: [FileUploadFieldComponent],\r\n})\r\nexport class FileUploadFieldModule {}\r\n","import {ChangeDetectionStrategy, Component, inject, Input, OnInit} from '@angular/core';\r\nimport {\r\n  NavigationCancel, NavigationEnd,\r\n  NavigationError,\r\n  NavigationStart,\r\n  RouteConfigLoadEnd,\r\n  RouteConfigLoadStart,\r\n  Router, Scroll,\r\n} from \"@angular/router\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoadingComponent implements OnInit{\r\n  private router = inject(Router);\r\n  \r\n  @Input('fullScreen') isFullScreen = true;\r\n  @Input() text = 'Cargando...';\r\n  @Input() auto = false;\r\n  \r\n  // Detects whenever a routing transition is happening\r\n  @Input() detectRoutingOnGoing = false;\r\n  \r\n  show$ = new BehaviorSubject<boolean>(true)\r\n  \r\n  ngOnInit() {\r\n    if(this.detectRoutingOnGoing){\r\n      this.router.events.subscribe(event =>{\r\n        //console.log(\"Event type:\", event.constructor.name);\r\n        if (\r\n          event instanceof  NavigationStart ||\r\n          event instanceof RouteConfigLoadStart\r\n        ){\r\n          this.show$.next(true)\r\n        }\r\n        else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationError ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof RouteConfigLoadEnd\r\n        ){\r\n          this.show$.next(false)\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n}\r\n","<div class=\"overlay flex-center\" [class.overlay--full-screen]=\"isFullScreen\" *ngIf=\"this.show$ | async\">\r\n    <div class=\"loader flex-center\">\r\n        <p-progressSpinner\r\n                class=\"loader__spinner\"\r\n                [style]=\"{ width: '50px', height: '50px' }\"\r\n                styleClass=\"custom-spinner\"\r\n                strokeWidth=\"4\"\r\n                animationDuration=\"1.65s\"\r\n                [class.loader__spinner--full-screen]=\"isFullScreen\"\r\n        ></p-progressSpinner>\r\n        <span\r\n                class=\"loader__text\"\r\n                [class.loader__text--full-screen]=\"isFullScreen\"\r\n        >{{ text }}</span\r\n        >\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoadingComponent } from './loading.component';\r\nimport {ProgressSpinnerModule} from \"primeng/progressspinner\";\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoadingComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProgressSpinnerModule,\r\n  ],\r\n  exports:[\r\n    LoadingComponent\r\n  ]\r\n})\r\nexport class LoadingModule { }\r\n","import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function createDateRangeValidator(): ValidatorFn {\r\n\treturn (form: AbstractControl): ValidationErrors | null => {\r\n\t\tconst start: Date = form.get(\"promoStartAt\")?.value;\r\n\t\tconst end: Date = form.get(\"promoEndAt\")?.value;\r\n\t\t\r\n\t\tif (start && end && end.getTime() - start.getTime() >= 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\treturn start && end ? { dateRangeInvalid: true } : null;\r\n\t};\r\n}\r\n","import {AbstractControl, ValidationErrors, ValidatorFn} from '@angular/forms';\r\n\r\nexport function createPasswordStrengthValidator(): ValidatorFn {\r\n\treturn (control:AbstractControl) : ValidationErrors | null => {\r\n\t\t\r\n\t\tconst value = control.value;\r\n\t\t\r\n\t\tif (!value) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\t\r\n\t\tconst hasUpperCase = /[A-Z]+/.test(value);\r\n\t\t\r\n\t\tif(!hasUpperCase){\r\n\t\t\treturn {hasUppercase:true}\r\n\t\t}\r\n\t\t\r\n\t\tconst hasLowerCase = /[a-z]+/.test(value);\r\n\t\t\r\n\t\tif(!hasLowerCase){\r\n\t\t\treturn {hasLowerCase:true}\r\n\t\t}\r\n\t\t\r\n\t\tconst hasNumeric = /[0-9]+/.test(value);\r\n\t\tif(!hasNumeric) return {hasNumeric: true}\r\n\t\t\r\n\t\tconst passwordValid = hasUpperCase && hasLowerCase && hasNumeric;\r\n\t\t\r\n\t\treturn !passwordValid ? {passwordStrength:true}: null;\r\n\t}\r\n}\r\n","export const FieldType = {\r\n\tTEXT: 'text',\r\n\tNUMBER: 'number',\r\n\tDATE: 'date',\r\n\tSELECT: 'select',\r\n  MULTI_SELECT : 'multi_select',\r\n\tCHECK: 'check',\r\n\tTEXTAREA: 'textarea',\r\n\tFILE_UPLOAD: 'file_upload',\r\n  FORM_GROUP : 'form',\r\n\tINVISIBLE : null\r\n} as const;\r\n\r\nexport const defaultFieldValues: { [key in keyof typeof FieldType]: any } = {\r\n\tTEXT: '',\r\n\tTEXTAREA: '',\r\n\tCHECK: false,\r\n\tNUMBER: null,\r\n\tDATE: null,\r\n\tSELECT: null,\r\n\tMULTI_SELECT: null,\r\n\tFILE_UPLOAD: null,\r\n\tFORM_GROUP: null,\r\n\tINVISIBLE: null\r\n};\r\n\r\nexport type FieldType = typeof FieldType[keyof typeof FieldType];\r\n\r\nexport const DEFAULT_ERROR_TYPES = [\r\n  { type: 'required', message: 'is required.' , showOnSubmit : false  },\r\n  { type: 'minlength', message: 'minimum length error.', showOnSubmit : false  },\r\n  { type: 'maxlength', message: 'maximum length exceeded.', showOnSubmit : false  },\r\n  { type: 'hasLowerCase', message: 'requires at least one lower case letter.' , showOnSubmit : false},\r\n  { type: 'hasUppercase', message: 'requires at least one upper case letter.' , showOnSubmit : false},\r\n  { type: 'hasNumeric', message: 'requires at least one numeric character.' , showOnSubmit : false },\r\n  { type: 'passwordsNotMatch', message: 'Passwords should match' , showOnSubmit : false},\r\n  { type: 'alphanumericPattern', message: 'should contain only alphanumeric characters' , showOnSubmit : false},\r\n  { type: 'whitespacePattern', message: 'does not accept spaces' , showOnSubmit : false},\r\n  { type: 'emailPattern', message: 'invalid' , showOnSubmit : false},\r\n  { type: 'whitespacePattern', message: 'should not contain spaces' , showOnSubmit : false},\r\n  { type: 'usernameExists', message: 'Username already exists.', showOnSubmit : false },\r\n  { type: 'emailExists', message: 'already exists.', showOnSubmit : false },\r\n  { type: 'invalidCredentials', message: 'Invalid credentials.', showOnSubmit : true },\r\n\r\n\r\n];\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Subject} from \"rxjs\";\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FormService {\r\n\t\r\n\tresetForm$ = new Subject<void>();\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {DEFAULT_ERROR_TYPES, defaultFieldValues, Field, FieldType, FormState, IDynamicForm} from '../shared';\r\nimport {\r\n  BehaviorSubject,\r\n  combineLatest,\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  filter,\r\n  map,\r\n  Observable,\r\n  Subject,\r\n  tap,\r\n} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {FormService} from \"../state/form-service\";\r\n\r\nexport enum FormStatus{\r\n  INVALID = 'INVALID',\r\n  VALID = 'VALID',\r\n  PENDING = 'PENDING'\r\n}\r\n\r\n\r\n// DynamicFormComponent is an Angular component that creates a form based on a given structure and manages its state.\r\n@Component({\r\n  selector: 'dynamic-form',\r\n  templateUrl: './dynamic-form.component.html',\r\n  styleUrls: ['./dynamic-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DynamicFormComponent implements IDynamicForm, OnInit, OnDestroy, ControlValueAccessor {\r\n  @Input() structure$!: Observable<Field[]>;\r\n  @Input() data$!: Observable<any>;\r\n  @Input('readonly') formReadOnly = false;\r\n\r\n  @Output() updateForm = new EventEmitter<FormState>();\r\n\r\n  fieldType = FieldType;\r\n  defaultErrors = DEFAULT_ERROR_TYPES;\r\n  \r\n  form!: FormGroup;\r\n  formSubmitted$ = new BehaviorSubject<boolean>(false);\r\n  formDestroyed$ = new Subject<void>();\r\n\r\n  @Output() formInitialized = new EventEmitter<FormGroup>();\r\n\r\n  constructor(private readonly fb: FormBuilder, private changeDetector: ChangeDetectorRef, private formService : FormService ) {}\r\n\r\n  ngOnInit() {\r\n    this.watchForFormBuild();\r\n  \r\n    this.formService.resetForm$.pipe(takeUntil(this.formDestroyed$)).subscribe(() => {\r\n      this.form?.reset();\r\n    });\r\n  }\r\n\r\n  submitted() {\r\n    this.form.markAsTouched();\r\n    this.form.markAllAsTouched();\r\n    this.form.updateValueAndValidity();\r\n    this.formSubmitted$.next(true);\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  \r\n  hasValidator(control : string) : boolean{\r\n    return this.form.controls[control].hasValidator(Validators.required) || this.form.controls[control].hasValidator(Validators.requiredTrue)\r\n  }\r\n  \r\n  // Subscribes to structure$ and then to data$ observables to build and patch the form.\r\n  // They are also responsible for handling form patching and resetting based on structure and data.\r\n  private watchForFormBuild(){\r\n    this.structure$\r\n      .pipe(\r\n        map(this.formBuilder),\r\n        tap(this.initializeForm),\r\n        (f$) => combineLatest([f$, this.data$]),\r\n        takeUntil(this.formDestroyed$)\r\n      )\r\n      .subscribe(this.patchValue);\r\n    \r\n  }\r\n  \r\n  \r\n\r\n  // Initializes the form group property and sets up listeners for form changes.\r\n  // Context is shared by JS, thats why I have access to FormGroup instance.\r\n  private initializeForm = (form: FormGroup) => {\r\n    this.form = form;\r\n    this.listenFormChanges(form);\r\n    this.listenFormStatusChanges(form);\r\n    this.formInitialized.emit(this.form);\r\n  };\r\n\r\n\r\n  // Builds a FormGroup based on the provided structure and adds FormControl instances for each field.\r\n  private formBuilder = (structure: Field[]): FormGroup => {\r\n    const formGroupConfig = structure.find(field => field.name === null);\r\n    const groupValidators = formGroupConfig?.validators || [];\r\n    const groupAsyncValidators = formGroupConfig?.asyncValidators || [];\r\n    const groupUpdateOn = formGroupConfig?.updateOn\r\n\r\n\r\n    // Remove the FormGroup config from the structure array.\r\n    if (formGroupConfig) structure = structure.filter(field => field.name !== null);\r\n\r\n\r\n    const group = this.fb.group(\r\n      {},\r\n      {\r\n        validators: groupValidators,\r\n        asyncValidators: groupAsyncValidators,\r\n        updateOn : groupUpdateOn\r\n      }\r\n    );\r\n\r\n    structure.forEach((field) =>\r\n      group.addControl(field.name!, this.control(field))\r\n    );\r\n\r\n\r\n    return group;\r\n  };\r\n\r\n  // Creates a FormControl for the given field with its initial value, validators, and other configurations.\r\n  private control = (field: Field): FormControl => {\r\n    const value = field.type ? defaultFieldValues[field.type.toUpperCase() as keyof typeof FieldType] : null;\r\n    \r\n    return this.fb.control({ value, disabled: field.disabled || false }, {\r\n      validators: field.validators,\r\n      asyncValidators: field.asyncValidators,\r\n      updateOn: field.updateOn\r\n    });\r\n  };\r\n\r\n  // Patches the form with the given data or an empty object if data is not provided.\r\n  private patchValue = ([form, data]: [FormGroup, any]) => {\r\n    // Only patch values if the data object is different from the current form values\r\n    if (!this.isEqual(data, form.value)) {\r\n      form.patchValue(data || {}, { emitEvent: false });\r\n    }\r\n  };\r\n\r\n  // Listens for form value changes and emits the updateForm event with the changes.\r\n  private listenFormChanges(form: FormGroup) {\r\n    form.valueChanges\r\n      .pipe(\r\n        debounceTime(100),\r\n        distinctUntilChanged((prev, curr) => this.isEqual(prev, curr)),\r\n        takeUntil(this.formDestroyed$)\r\n      )\r\n      .subscribe((changes) => {\r\n        this.updateForm.emit({\r\n          data : changes,\r\n          valid : this.form.valid,\r\n          status : this.form.status\r\n        });\r\n      });\r\n  }\r\n\r\n  private listenFormStatusChanges(form: FormGroup) {\r\n    let prevStatus = 'INVALID'\r\n    form.statusChanges.pipe(takeUntil(this.formDestroyed$))\r\n      .subscribe((status => {\r\n        if(prevStatus === 'PENDING'){\r\n          this.updateForm.emit({\r\n            data : this.form.value,\r\n            valid : this.form.valid,\r\n            status\r\n          });\r\n        }\r\n        prevStatus = status;\r\n\r\n      }))\r\n  }\r\n\r\n  // Deep equality check for two objects.\r\n  // FIXME: Should I add extenal library to improve performance ?\r\n  private isEqual(obj1: any, obj2: any): boolean {\r\n    if (obj1 === obj2) return true;\r\n\r\n    if (\r\n      typeof obj1 !== 'object' ||\r\n      typeof obj2 !== 'object' ||\r\n      obj1 === null ||\r\n      obj2 === null\r\n    )\r\n      return false;\r\n\r\n    const keys1 = Object.keys(obj1);\r\n    const keys2 = Object.keys(obj2);\r\n\r\n    if (keys1.length !== keys2.length) return false;\r\n\r\n    for (const key of keys1) {\r\n      if (!keys2.includes(key)) return false;\r\n      if (!this.isEqual(obj1[key], obj2[key])) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  \r\n\r\n  ngOnDestroy() {\r\n    this.formDestroyed$.next();\r\n    this.formDestroyed$.complete();\r\n  }\r\n\r\n  // ------------------------------ Implementation of  ControlValueAccessor methods ------------------------------\r\n  writeValue(value: any): void {\r\n    this.form.patchValue(value, { emitEvent: false });\r\n  }\r\n  \r\n  registerOnChange(fn: (value: any) => void): void {\r\n    this.form.valueChanges.pipe(\r\n      filter(() => this.form.touched),\r\n      distinctUntilChanged()).subscribe(fn);\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.form.valueChanges.pipe(filter(() => this.form.touched), distinctUntilChanged()).subscribe(fn);\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    isDisabled ? this.form.disable() : this.form.enable();\r\n  }\r\n  \r\n}\r\n","<form [formGroup]=\"form\" class=\"form\" autocomplete=\"off\">\r\n  <div\r\n    *ngFor=\"let field of structure$ | async\"\r\n    class=\"field\"\r\n    [ngClass]=\"field.name\"\r\n    [class.read-only-form]=\"formReadOnly\"\r\n  >\r\n\r\n    <ng-container *ngIf=\"(!!field.hide ? !field.hide(this.form) : true) && field.name\">\r\n\r\n      <label\r\n         class=\"field__label\"\r\n         [for]=\"field.name\"\r\n         [class.required]=\"hasValidator(field.name)\"\r\n      >{{ field.label }}</label>\r\n\r\n      <ng-container [ngSwitch]=\"field.type\">\r\n        <!-- ------------ Number Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.NUMBER\">\r\n            <custom-number-field\r\n              [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched\"\r\n              [max]=\"field.number?.max!\"\r\n              [maxFractionDigits]=\"field.number?.maxFractionDigits!\"\r\n              [readonly]=\"field.readonly || formReadOnly\"\r\n              class=\"form-group__input\"\r\n              [formControlName]=\"field.name\"\r\n              [placeholder]=\"field.placeholder!\"\r\n              [inputId]=\"field.name\"\r\n            ></custom-number-field>\r\n        </ng-container>\r\n        <!-- ------------ Number Field Ends ------------ -->\r\n\r\n        <!-- ------------ Checkbox Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.CHECK\">\r\n          <custom-checkbox-field\r\n            [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched\"\r\n            [readonly]=\"field.readonly || formReadOnly\"\r\n            class=\"form-group__input\"\r\n            [formControlName]=\"field.name\"\r\n            [inputId]=\"field.name\"\r\n          ></custom-checkbox-field>\r\n        </ng-container>\r\n\r\n        <!-- ------------ Date Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.DATE\">\r\n          <custom-date-field [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched\"\r\n                  [readonly]=\"field.readonly || formReadOnly\"\r\n                  class=\"form-group__input\"\r\n                  [formControlName]=\"field.name\"\r\n                  [inputId]=\"field.name\"\r\n                  [placeholder]=\"field.placeholder!\"\r\n          ></custom-date-field>\r\n        </ng-container>\r\n        <!-- ------------ Date Ends ------------ -->\r\n\r\n        <!-- ------------ TextArea Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.TEXTAREA\">\r\n          <custom-text-area-field\r\n            [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched \"\r\n            [readonly]=\"field.readonly || formReadOnly\"\r\n            class=\"form-group__input\"\r\n            [formControlName]=\"field.name\"\r\n            [inputId]=\"field.name\"\r\n            [placeholder]=\"field.placeholder!\"\r\n          ></custom-text-area-field>\r\n        </ng-container>\r\n        <!-- ------------ TextArea Ends ------------ -->\r\n\r\n        <!-- ------------ Select Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.SELECT\">\r\n          <custom-select-field\r\n            [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched\r\n            \"\r\n            [options]=\"field.select?.options ?? []\"\r\n            [showClear]=\"field.select?.showClear ?? false\"\r\n            [readonly]=\"field.readonly || formReadOnly\"\r\n            class=\"form-group__input\"\r\n            [formControlName]=\"field.name\"\r\n            [inputId]=\"field.name\"\r\n            [placeholder]=\"field.placeholder!\"\r\n          ></custom-select-field>\r\n        </ng-container>\r\n        <!-- ------------ Select Field Ends ------------ -->\r\n\r\n        <!-- ------------ Multi Select Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.MULTI_SELECT\">\r\n          <custom-select-field\r\n            [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched\"\r\n            [readonly]=\"field.readonly || formReadOnly\"\r\n            class=\"form-group__input\"\r\n            [options]=\"field.select?.options ?? []\"\r\n            [formControlName]=\"field.name\"\r\n            [inputId]=\"field.name\"\r\n            [multiSelect]=\"true\"\r\n            [placeholder]=\"field.placeholder!\"\r\n          ></custom-select-field>\r\n        </ng-container>\r\n        <!-- ------------ Multi Select Field Ends ------------ -->\r\n\r\n        <!-- ------------ File Field Starts ------------ -->\r\n        <ng-container *ngSwitchCase=\"fieldType.FILE_UPLOAD\">\r\n          <custom-file-upload\r\n                  [class.error]=\"\r\n                      this.form.controls[field.name].invalid &&\r\n                      this.form.controls[field.name].touched\"\r\n                  class=\"form-group__input\"\r\n                  [formControlName]=\"field.name\"\r\n                  [accept]=\"field.file?.accept!\"\r\n                  [placeholder]=\"field.placeholder!\"\r\n          ></custom-file-upload>\r\n        </ng-container>\r\n        <!-- ------------ File Field Ends ------------ -->\r\n\r\n        <!-- -------------- Edge Case Starts -------------- -->\r\n        <!-- This is for passing id as form value if needed -->\r\n        <ng-container *ngSwitchCase=\"fieldType.INVISIBLE\"></ng-container>\r\n        <!-- --------------- Edge Case Ends --------------- -->\r\n\r\n        <!-- -------------- Default Case Starts (Classic input) -------------- -->\r\n        <ng-container *ngSwitchDefault>\r\n          <custom-text-field\r\n            [class.error]=\"\r\n              this.form.controls[field.name].invalid &&\r\n              this.form.controls[field.name].touched\r\n            \"\r\n            [readonly]=\"field.readonly || formReadOnly\"\r\n            class=\"form-group__input\"\r\n            [formControlName]=\"field.name\"\r\n            [placeholder]=\"field.placeholder || ''\"\r\n            [icon]=\"field.attrs?.icon \"\r\n            [iconPosition]=\"field.attrs?.iconPosition \"\r\n            [type]=\"field.attrs?.type\"\r\n            [inputId]=\"field.name\"\r\n            [loading$]=\"this.form.controls[field.name].statusChanges\"\r\n          ></custom-text-field>\r\n<!--          <pre>{{this.form.controls[field.name].errors | json}}</pre>-->\r\n        </ng-container>\r\n        <!-- -------------- Default Case Ends (Classic input) -------------- -->\r\n\r\n\r\n\r\n        <!-- -------------- FormControl (Field) Error Starts -------------- -->\r\n        <ng-container *ngFor=\"let error of (field.errors ?? []).concat(this.defaultErrors)\">\r\n          <ng-container *ngIf=\"this.form.controls[field.name].hasError(error.type) &&  !field.readonly && !formReadOnly\">\r\n          <!-- Common error -->\r\n          <small class=\"error-message\" *ngIf=\"!error?.showOnSubmit\">{{ field.label }} {{ error.message }}</small>\r\n\r\n          <!-- Error showed on submit-->\r\n          <small class=\"error-message\" *ngIf=\"error?.showOnSubmit && (this.formSubmitted$ | async)\">{{ field.label }} {{ error.message }}</small>\r\n\r\n            <!-- Error for maxlength -->\r\n<!--            <small class=\"error-message\"-->\r\n<!--                   *ngIf=\"!error?.showOnSubmit && error.type === 'maxlength' && form.controls[field.name]?.errors?.['maxlength']\"-->\r\n<!--            >-->\r\n<!--              The maximum value allowed is {{ form.controls[field.name].errors?.['maxlength']?.['requiredLength'] }}. However, the actual value provided is {{ form.controls[field.name].errors?.['maxlength']?.['actualLength'] }}. Please provide a value less than or equal to the maximum allowed value.-->\r\n<!--            </small>-->\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- -------------- FormControl (Field) Error Ends -------------- -->\r\n\r\n\r\n        <!-- FormControl (Field) \".groupErrors[]\" Starts -->\r\n        <ng-container *ngIf=\"field.groupErrors\">\r\n          <ng-container *ngFor=\"let groupError of field.groupErrors\">\r\n            <small\r\n              class=\"group-error-message\"\r\n              *ngIf=\"\r\n            form.invalid &&\r\n            form.hasError(groupError.type) &&\r\n            form.controls[field.name].touched &&\r\n            !form.controls[field.name].errors &&\r\n            !groupError?.showOnSubmit &&\r\n            (formSubmitted$ | async)\r\n          \"\r\n            >\r\n              {{ groupError.message }}\r\n            </small>\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- FormControl (Field) \".groupErrors[]\" Ends -->\r\n\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n\r\n\r\n<!--    FIXME : I should write css to hide this error if there is a field related error being showed-->\r\n  <!-- Errors associated to FormGroup Starts -->\r\n<!--  <div class=\"form-group-errors\" *ngIf=\"form.invalid && form.errors\">-->\r\n<!--    <ng-container *ngFor=\"let field of structure$ | async\">-->\r\n<!--      <ng-container *ngIf=\"!field.name && field.errors\">-->\r\n<!--        <ng-container *ngFor=\"let error of field.errors\">-->\r\n<!--          <small class=\"error-message\" *ngIf=\"form.hasError(error.type)\">-->\r\n<!--              {{ error.message }}-->\r\n<!--          </small>-->\r\n<!--        </ng-container>-->\r\n<!--      </ng-container>-->\r\n<!--    </ng-container>-->\r\n<!--  </div>-->\r\n  <!-- Errors associated to FormGroup ends -->\r\n\r\n</form>\r\n","// Modules\r\nimport { NgModule } from '@angular/core'\r\n// Prime\r\nimport { InputNumberModule } from 'primeng/inputnumber'\r\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component'\r\n\r\nimport { ButtonModule } from 'primeng/button'\r\nimport { TextAreaFieldModule } from '../text-area-field'\r\nimport { NumberFieldModule } from '../number-field'\r\nimport { CheckboxFieldModule } from '../checkbox-field'\r\nimport { DateFieldModule } from '../date-field'\r\nimport { SelectFieldModule } from '../select-field'\r\nimport { TextFieldModule } from '../text-field'\r\nimport { FileUploadFieldModule } from '../file-upload-field'\r\nimport { FieldsModule } from '../fields.module'\r\n\r\n// Component\r\n\r\n@NgModule({\r\n  imports: [\r\n    FieldsModule,\r\n    InputNumberModule,\r\n    NumberFieldModule,\r\n    CheckboxFieldModule,\r\n    SelectFieldModule,\r\n    DateFieldModule,\r\n    TextFieldModule,\r\n    ButtonModule,\r\n    TextAreaFieldModule,\r\n    FileUploadFieldModule,\r\n  ],\r\n  declarations: [DynamicFormComponent],\r\n  exports: [DynamicFormComponent],\r\n})\r\nexport class DynamicFormModule {}\r\n","import {createActionGroup, emptyProps, props} from '@ngrx/store';\r\nimport {FormState} from \"../shared\";\r\n\r\n\r\n\r\nexport const formsActions = createActionGroup({\r\n\tsource: 'ngrxForms',\r\n\tevents: {\r\n\t\t'Set Data': props<{ data: any }>(),\r\n\t\t'Set Structure': props<{ structure: any }>(),\r\n\r\n\t\t'Update Data': props<{ state : FormState}>(),\r\n\r\n    'Reset Form': emptyProps(),\r\n    'Destroy Form': emptyProps(),\r\n\r\n\t},\r\n});\r\n","import {createFeature, createReducer, on} from '@ngrx/store';\r\nimport {FormControlStatus} from '@angular/forms';\r\nimport {Field} from \"../shared\";\r\nimport {formsActions} from \"./forms.actions\";\r\n\r\nexport interface NgrxFormsState {\r\n  data: any;\r\n  structure: Field[];\r\n  valid: boolean;\r\n  status : FormControlStatus;\r\n  touched: boolean;\r\n}\r\n\r\nexport const ngrxFormsInitialState: NgrxFormsState = {\r\n  data: {},\r\n  valid: true,\r\n  status : 'VALID',\r\n  touched: false,\r\n  structure: [],\r\n};\r\n\r\nexport const ngrxFormsFeature = createFeature({\r\n  name: 'ngrxForms',\r\n  reducer: createReducer(\r\n    ngrxFormsInitialState,\r\n    on(formsActions.setData, (state, action) => ({ ...state, data: action.data })),\r\n    on(formsActions.updateData, (state, action) => {\r\n      const data = { ...state.data, ...action.state.data };\r\n      return {\r\n        ...state,\r\n        data,\r\n        valid : action.state.valid,\r\n        status : action.state.status,\r\n        touched: true\r\n      };\r\n    }),\r\n    on(formsActions.setStructure, (state, action) => ({ ...state, structure: action.structure })),\r\n    on(formsActions.destroyForm, () => ngrxFormsInitialState),\r\n    on(formsActions.resetForm, (state) => ({\r\n      ...state,\r\n      data : {},\r\n      status : 'INVALID',\r\n      valid : true,\r\n      touched: false,\r\n    })),\r\n  ),\r\n});\r\n","import { ngrxFormsFeature } from './forms.reducer';\r\n\r\nconst { selectNgrxFormsState, selectData, selectStructure, selectTouched, selectValid } =\r\n  ngrxFormsFeature;\r\n\r\nexport const ngrxFormsQuery = {\r\n  selectNgrxFormsState,\r\n  selectData,\r\n  selectStructure,\r\n  selectTouched,\r\n  selectValid,\r\n};\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Actions, createEffect, ofType} from \"@ngrx/effects\";\r\nimport {map, tap} from \"rxjs\";\r\nimport {formsActions} from \"./forms.actions\";\r\nimport {FormService} from \"./form-service\";\r\n\r\n@Injectable()\r\nexport class FormsEffects {\r\n\t\r\n\t\r\n\tonFormReset$ = createEffect(() =>\r\n\t\t\tthis.actions$.pipe(ofType(formsActions.resetForm),\r\n\t\t\t\ttap(() => this.formService.resetForm$.next())\r\n\t\t\t),\r\n\t\t{ dispatch: false }\r\n\t);\r\n\t\r\n\tconstructor(\r\n\t\tprivate actions$: Actions,\r\n\t\tprivate formService: FormService\r\n\t) { }\r\n}\r\n","/*\r\n * Public API Surface of ui-components\r\n */\r\n\r\n// Modules\r\n// export * from './lib/ui-components.module';\r\nexport * from './lib/modules/fields/text-field';\r\nexport * from './lib/modules/fields/number-field';\r\nexport * from './lib/modules/fields/checkbox-field';\r\nexport * from './lib/modules/fields/date-field';\r\nexport * from './lib/modules/fields/select-field';\r\nexport * from './lib/modules/fields/text-area-field';\r\nexport * from './lib/modules/fields/file-upload-field'\r\nexport * from './lib/modules/data/loading/loading.module'\r\n// Form\r\nexport * from './lib/modules/fields/form';\r\n\r\n// Components\r\nexport * from './lib/modules/fields/text-field/text-field.component';\r\nexport * from './lib/modules/fields/number-field/number-field.component';\r\nexport * from './lib/modules/fields/checkbox-field/checkbox-field.component';\r\nexport * from './lib/modules/fields/date-field/date-field.component';\r\nexport * from './lib/modules/fields/select-field/select-field.component';\r\nexport * from './lib/modules/fields/text-area-field/text-area-field.component'\r\nexport * from './lib/modules/fields/file-upload-field/file-upload-field.component'\r\nexport * from './lib/modules/data/loading/loading.component'\r\n\r\n// Form\r\nexport * from './lib/modules/fields/form/dynamic-form/dynamic-form.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i3","i1","i2","i2.FormService","i4.NumberFieldComponent","i5.CheckboxFieldComponent","i6.SelectFieldComponent","i7.DateFieldComponent","i8.TextFieldComponent","i9.TextAreaFieldComponent","i10.FileUploadFieldComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;MAuBa,kBAAkB,CAAA;AAX/B,IAAA,WAAA,GAAA;QAaW,IAAW,CAAA,WAAA,GAAwB,EAAE,CAAC;QAE5B,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QAC7B,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAY,CAAA,YAAA,GAAuC,IAAI,CAAC;QACxD,IAAI,CAAA,IAAA,GAA6C,MAAM,CAAC;QACxD,IAAI,CAAA,IAAA,GAA8B,IAAI,CAAC;AAIzC,QAAA,IAAA,CAAA,WAAW,GAAgB,IAAI,WAAW,CAC/C,EAAE,CACH,CAAC;AAEM,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAe5C,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAa,KAAI,GAAG,CAAC;AACjC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AA6B7B,KAAA;IA3CC,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC1C,aAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvB,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;KACtC;AAKM,IAAA,UAAU,CAAC,KAAa,EAAA;AAC7B,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAClC;AAEM,IAAA,gBAAgB,CAAC,EAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;AAEM,IAAA,iBAAiB,CAAC,EAAO,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAEM,IAAA,gBAAgB,CAAE,UAAmB,EAAA;AAC1C,QAAA,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KACrE;IAEM,MAAM,GAAA;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/C;IAEO,mBAAmB,GAAA;QACzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAChD;;+GA5DU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,EARlB,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,UAAA,EAAA,YAAA,EAAA,cAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,kBAAkB;AAC/B,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECrBH,koCAkCA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDXa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAX9B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,EAElB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAoB,kBAAA;AAC/B,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,koCAAA,EAAA,CAAA;8BAIQ,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACa,UAAU,EAAA,CAAA;sBAA5B,KAAK;uBAAC,UAAU,CAAA;gBACR,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;AEhCR;AAKA,MAAM,OAAO,GAAG,CAAC,YAAY,EAAE,mBAAmB,CAAC,CAAC;MAMvC,YAAY,CAAA;;yGAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,YANR,YAAY,EAAE,mBAAmB,CAAjC,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAMrC,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,EAHV,OAAA,EAAA,CAAA,OAAO,EAHL,YAAY,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAMrC,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;AACrB,oBAAA,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC;AACtB,iBAAA,CAAA;;;ACVD;MAaa,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,iBAHX,kBAAkB,CAAA,EAAA,OAAA,EAAA,CADvB,YAAY,EAAE,eAAe,aAE7B,kBAAkB,CAAA,EAAA,CAAA,CAAA;6GAEjB,eAAe,EAAA,OAAA,EAAA,CAJhB,YAAY,EAAE,eAAe,CAAA,EAAA,CAAA,CAAA;2FAI5B,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,eAAe,CAAC;oBACxC,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;AAC9B,iBAAA,CAAA;;;ACZD;MAsBa,oBAAoB,CAAA;AAXjC,IAAA,WAAA,GAAA;;QAaW,IAAW,CAAA,WAAA,GAAW,EAAE,CAAA;QAExB,IAAiB,CAAA,iBAAA,GAAG,CAAC,CAAC;QACtB,IAAiB,CAAA,iBAAA,GAAG,CAAC,CAAC;AAEtB,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;AACvB,QAAA,IAAA,CAAA,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC;QAEvB,IAAS,CAAA,SAAA,GAAG,CAAC,CAAC;QACd,IAAM,CAAA,MAAA,GAAG,OAAO,CAAC;QAEjB,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;QACZ,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;QAKZ,IAAW,CAAA,WAAA,GAAG,IAAI,CAAC;;QAIT,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;;;AAI/B,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,WAAW,CAAgB,IAAI,CAAC,CAAC;QACnD,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAEnB,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAoB,KAAI,GAAG,CAAC;AACxC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AAEpB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,OAAO,EAAQ,CAAC;AA2C3C,KAAA;IA7DC,IAAa,QAAQ,CAAC,QAAiB,EAAA;AACrC,QAAA,QAAQ,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAA;KAClE;IAkBD,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACjC,SAAS,CAAC,KAAK,IAAG;AAChB,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxB,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;KAC7B;AAEM,IAAA,UAAU,CAAC,KAAa,EAAA;AAC7B,QAAA,IAAG,KAAK;AAAE,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAC5C;AAEM,IAAA,gBAAgB,CAAC,EAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;AAEM,IAAA,iBAAiB,CAAC,EAAO,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAEM,IAAA,gBAAgB,CAAE,QAAiB,EAAA;AACxC,QAAA,QAAQ,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KACnE;;IAGM,MAAM,GAAA;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/C;IAEO,mBAAmB,GAAA;QACzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAChD;;iHA3EU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,EARpB,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECpBH,m5BA2BA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,cAAA,EAAA,SAAA,EAAA,YAAA,EAAA,OAAA,EAAA,aAAA,EAAA,MAAA,EAAA,WAAA,EAAA,UAAA,EAAA,OAAA,EAAA,WAAA,EAAA,cAAA,EAAA,MAAA,EAAA,UAAA,EAAA,cAAA,EAAA,KAAA,EAAA,KAAA,EAAA,sBAAA,EAAA,sBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,UAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,QAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDLa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAXhC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,qBAAqB,EAEpB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAsB,oBAAA;AACjC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,m5BAAA,EAAA,CAAA;8BAIQ,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAEG,iBAAiB,EAAA,CAAA;sBAAzB,KAAK;gBACG,iBAAiB,EAAA,CAAA;sBAAzB,KAAK;gBAEG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBACG,GAAG,EAAA,CAAA;sBAAX,KAAK;gBAEG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBAEG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACO,QAAQ,EAAA,CAAA;sBAApB,KAAK;gBAIG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBAGa,UAAU,EAAA,CAAA;sBAA5B,KAAK;uBAAC,UAAU,CAAA;;;AE7CnB;MAaa,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,iBAHb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CADzB,YAAY,EAAE,iBAAiB,aAE/B,oBAAoB,CAAA,EAAA,CAAA,CAAA;+GAEnB,iBAAiB,EAAA,OAAA,EAAA,CAJlB,YAAY,EAAE,iBAAiB,CAAA,EAAA,CAAA,CAAA;2FAI9B,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,CAAC;oBAC1C,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAChC,iBAAA,CAAA;;;ACZD;MAsBa,sBAAsB,CAAA;AAXnC,IAAA,WAAA,GAAA;QAaqB,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QAE7B,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;QACX,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;AAElB,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAC3C,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,CAAC;AAErC,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAqB,KAAI,GAAG,CAAC;AACzC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AA4C7B,KAAA;IA1CC,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;aACzC,SAAS,CAAC,KAAK,IAAG;AACjB,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvB,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,CAAC;AAChC,QAAA,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;KACrC;AAGM,IAAA,UAAU,CAAC,KAAc,EAAA;AAC9B,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAClC;AAEM,IAAA,gBAAgB,CAAC,EAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;AAEM,IAAA,iBAAiB,CAAC,EAAO,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAEM,IAAA,gBAAgB,CAAE,UAAmB,EAAA;AAC1C,QAAA,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KACrE;IAEM,aAAa,GAAA;QAClB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/C;IAEO,mBAAmB,GAAA;QACzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAChD;;mHArDU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,EARtB,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,sBAAsB;AACnC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECpBH,8lBAmBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,WAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,cAAA,EAAA,UAAA,EAAA,UAAA,EAAA,WAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDGa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAXlC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,uBAAuB,EAEtB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAwB,sBAAA;AACnC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,8lBAAA,EAAA,CAAA;8BAIkB,UAAU,EAAA,CAAA;sBAA5B,KAAK;uBAAC,UAAU,CAAA;gBACR,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;;AE3BR;MAaa,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,iBAJf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAC3B,YAAY,EAAE,cAAc,aAC5B,sBAAsB,CAAA,EAAA,CAAA,CAAA;iHAErB,mBAAmB,EAAA,OAAA,EAAA,CAHpB,YAAY,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;2FAG3B,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;AACtC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;oBACvC,OAAO,EAAE,CAAC,sBAAsB,CAAC;AAClC,iBAAA,CAAA;;;ACZD;MA2Ba,kBAAkB,CAAA;AAb/B,IAAA,WAAA,GAAA;QAgBqB,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;QAE7B,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QAEjB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;AACX,QAAA,IAAA,CAAA,OAAO,GAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;QAEzB,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QAChC,IAAI,CAAA,IAAA,GAAqB,MAAM,CAAC;AAGlC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,WAAW,CAAc,IAAI,CAAC,CAAC;QACjD,IAAU,CAAA,UAAA,GAAG,KAAK,CAAC;AAEnB,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAkB,KAAI,GAAG,CAAC;AACtC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AAEpB,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAwCpD,KAAA;IAtCC,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC1C,aAAA,SAAS,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;KAC/C;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;KACtC;AAEM,IAAA,UAAU,CAAC,KAAW,EAAA;AAC3B,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAClC;AAEM,IAAA,gBAAgB,CAAC,EAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;AAEM,IAAA,iBAAiB,CAAC,EAAO,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAEM,IAAA,gBAAgB,CAAE,UAAmB,EAAA;AAC1C,QAAA,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KACrE;IAEM,MAAM,GAAA;QACX,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/C;IAEO,mBAAmB,GAAA;QACzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAChD;;+GA3DU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kBAAkB,EAVlB,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAAA,OAAA,EAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,KAAA,EAAA,SAAA,CAAA,EAAA,UAAA,EAAA,CAAA,QAAA,EAAA,YAAA,CAAA,EAAA,IAAA,EAAA,MAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,kBAAkB;AAC/B,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECvBH,s4BA+BA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,SAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,UAAA,EAAA,YAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,UAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,YAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,aAAA,EAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,WAAA,EAAA,UAAA,EAAA,eAAA,EAAA,cAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,aAAA,EAAA,sBAAA,EAAA,SAAA,EAAA,eAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,UAAA,EAAA,MAAA,EAAA,aAAA,EAAA,SAAA,EAAA,SAAA,EAAA,eAAA,EAAA,cAAA,EAAA,WAAA,EAAA,UAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,cAAA,EAAA,cAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDJa,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAb9B,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,mBAAmB,EAElB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAoB,kBAAA;AAC/B,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,s4BAAA,EAAA,CAAA;8BAOkB,UAAU,EAAA,CAAA;sBAA5B,KAAK;uBAAC,UAAU,CAAA;gBACR,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAEG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACQ,OAAO,EAAA,CAAA;sBAApB,KAAK;uBAAC,KAAK,CAAA;gBACE,OAAO,EAAA,CAAA;sBAApB,KAAK;uBAAC,KAAK,CAAA;gBACK,UAAU,EAAA,CAAA;sBAA1B,KAAK;uBAAC,QAAQ,CAAA;gBACN,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;AEvCR;MAaa,eAAe,CAAA;;4GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,iBAJX,kBAAkB,CAAA,EAAA,OAAA,EAAA,CACvB,YAAY,EAAE,cAAc,aAC5B,kBAAkB,CAAA,EAAA,CAAA,CAAA;6GAEjB,eAAe,EAAA,OAAA,EAAA,CAHhB,YAAY,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;2FAG3B,eAAe,EAAA,UAAA,EAAA,CAAA;kBAL3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,kBAAkB,CAAC;AAClC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,cAAc,CAAC;oBACvC,OAAO,EAAE,CAAC,kBAAkB,CAAC;AAC9B,iBAAA,CAAA;;;MCcY,oBAAoB,CAAA;AAXjC,IAAA,WAAA,GAAA;QAcqB,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAEtC,IAAO,CAAA,OAAA,GAAc,EAAE,CAAC;QACxB,IAAW,CAAA,WAAA,GAAG,KAAK,CAAC;QACpB,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAS,CAAA,SAAA,GAAG,KAAK,CAAA;AAInB,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,WAAW,CAA6B,IAAI,CAAC,CAAC;QAEhE,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;AAEzB,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAiB5C,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAyB,KAAI,GAAG,CAAC;AAC7C,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AAoD7B,KAAA;IApEC,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC1C,aAAA,SAAS,CAAC,CAAC,KAAK,KAAI;AACnB,YAAA,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;AAChE,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvB,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;KACtC;AAMM,IAAA,UAAU,CAAC,KAAkB,EAAA;AAClC,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;;AAExB,YAAA,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAwB,CAAC,CAAC;AACrD,SAAA;AAAM,aAAA;;YAEL,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACnD,YAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AACvC,SAAA;KACF;AAEM,IAAA,gBAAgB,CAAC,EAAO,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAiC,KAAI;AACpD,YAAA,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACxB,gBAAA,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC9D,EAAE,CAAC,GAAG,CAAC,CAAC;AACT,aAAA;AAAM,iBAAA;gBACL,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,KAAM,CAAC,CAAC;gBACxC,EAAE,CAAC,EAAE,CAAC,CAAC;AACR,aAAA;AACH,SAAC,CAAC;KACH;;;AAIO,IAAA,mBAAmB,CAAC,EAAO,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC;KAC9D;AAEO,IAAA,eAAe,CAAC,MAAe,EAAA;QACrC,OAAO,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC;KAClC;AAEM,IAAA,iBAAiB,CAAC,EAAO,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAEM,IAAA,gBAAgB,CAAE,UAAmB,EAAA;AAC1C,QAAA,UAAU,GAAG,IAAI,CAAC,mBAAmB,EAAE,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;KACrE;IAEO,kBAAkB,GAAA;QACxB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/C;IAEO,mBAAmB,GAAA;QACzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAChD;;iHArFU,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,EARpB,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,OAAA,EAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,oBAAoB;AACjC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECxBH,mkEA+DA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,cAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,EAAA,MAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,cAAA,EAAA,WAAA,EAAA,YAAA,EAAA,YAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,aAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,aAAA,EAAA,aAAA,EAAA,YAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,SAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,cAAA,EAAA,aAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,cAAA,EAAA,MAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,SAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,YAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,SAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAAA,YAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDrCa,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAXhC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,qBAAqB,EAEpB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAsB,oBAAA;AACjC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,mkEAAA,EAAA,CAAA;8BAKkB,UAAU,EAAA,CAAA;sBAA5B,KAAK;uBAAC,UAAU,CAAA;gBACR,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAEG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;AEpCR;MAca,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAJb,oBAAoB,CACzB,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAA,EAAA,OAAA,EAAA,CAC/C,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAHlB,OAAA,EAAA,CAAA,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAA,EAAA,CAAA,CAAA;2FAG9C,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,oBAAoB,CAAC;AACpC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,iBAAiB,EAAE,cAAc,CAAC;oBAC1D,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAChC,iBAAA,CAAA;;;MCGY,sBAAsB,CAAA;AAcjC,IAAA,WAAA,GAAA;QAbmB,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QACtC,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;QAG1B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,WAAW,GAAgB,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;AAE/C,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAa,KAAI,GAAG,CAAC;AACjC,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AAEb,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,OAAO,EAAQ,CAAC;KAElC;IAEjB,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;aAC1C,SAAS,CAAC,KAAK,IAAG;AACjB,YAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACvB,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;KACtC;AAED,IAAA,UAAU,CAAC,KAAa,EAAA;AACtB,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;KAClC;AAED,IAAA,gBAAgB,CAAC,EAAO,EAAA;AACtB,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;AAED,IAAA,iBAAiB,CAAC,EAAO,EAAA;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;AAED,IAAA,gBAAgB,CAAE,UAAmB,EAAA;AACnC,QAAA,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KAC7G;IAED,MAAM,GAAA;QACJ,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;mHA/CU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,sBAAsB,EARtB,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,EAAA,UAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,WAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,sBAAsB;AACnC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECdH,iqBAyBA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDTa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAXlC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wBAAwB,EAEvB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAAwB,sBAAA;AACnC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,iqBAAA,EAAA,CAAA;0EAGkB,UAAU,EAAA,CAAA;sBAA5B,KAAK;uBAAC,UAAU,CAAA;gBACR,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;;;AEnBR;MAYa,mBAAmB,CAAA;;gHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,iBAJf,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAC3B,YAAY,EAAE,mBAAmB,aACjC,sBAAsB,CAAA,EAAA,CAAA,CAAA;iHAErB,mBAAmB,EAAA,OAAA,EAAA,CAHpB,YAAY,EAAE,mBAAmB,CAAA,EAAA,CAAA,CAAA;2FAGhC,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;AACtC,oBAAA,OAAO,EAAE,CAAC,YAAY,EAAE,mBAAmB,CAAC;oBAC5C,OAAO,EAAE,CAAC,sBAAsB,CAAC;AAClC,iBAAA,CAAA;;;MCyEY,wBAAwB,CAAA;AAnErC,IAAA,WAAA,GAAA;QAqEW,IAAM,CAAA,MAAA,GAAI,2BAA2B,CAAA;AAuDvC,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,WAAW,CAAqB,EAAE,EAAE;AAC3D,YAAA,WAAW,EAAG,IAAI;AACnB,SAAA,CAAC,CAAC;AAEI,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,KAAyB,KAAI,GAAG,CAAC;AAC7C,QAAA,IAAA,CAAA,SAAS,GAAG,MAAK,GAAG,CAAC;AACpB,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,OAAO,EAAQ,CAAC;AAuCpD,KAAA;AAjGC,IAAA,UAAU,CAAC,KAAgB,EAAA;QACzB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/C,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;KACnB;AAED,IAAA,WAAW,CAAC,KAAY,EAAA;AACtB,QAAA,MAAM,IAAI,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/D,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;KACnB;IAED,MAAM,OAAO,CAAC,IAA8B,EAAA;AAC1C,QAAA,IAAI,IAAI,EAAC;YACP,IAAI;gBACF,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;gBACtD,MAAM,KAAK,GAAwB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAG,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACpH,gBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClC,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACd,gBAAA,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;AAChE,aAAA;AACF,SAAA;KACF;AAED,IAAA,iBAAiB,CAAC,IAAU,EAAA;QAC1B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,YAAA,MAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAEhC,MAAM,CAAC,SAAS,GAAG,YAAA;gBACjB,IAAI,MAAM,CAAC,MAAM,EAAE;AACjB,oBAAA,OAAO,CAAC;AACN,wBAAA,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;wBAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;wBACf,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7B,wBAAA,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAClC,qBAAA,CAAC,CAAC;AACJ,iBAAA;AAAM,qBAAA;AACL,oBAAA,MAAM,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;AACzC,iBAAA;AACH,aAAC,CAAA;YAED,MAAM,CAAC,OAAO,GAAG,YAAA;AACf,gBAAA,MAAM,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;AAC1C,aAAC,CAAA;AAED,YAAA,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAC,CAAC,CAAC;KACJ;AAED,IAAA,UAAU,CAAC,KAAgB,EAAA;QACzB,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;IAWD,QAAQ,GAAA;QACN,IAAI,CAAC,WAAW,CAAC,YAAY;AAC1B,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;AAC1C,aAAA,SAAS,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CACzC,CAAC;KACL;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC;AACjC,QAAA,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;KACtC;AAID,IAAA,UAAU,CAAC,IAAuB,EAAA;AAC/B,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC5C,QAAA,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;AAC5D,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;KACzC;;;AAMD,IAAA,UAAU,CAAE,KAA0B,EAAA;AACpC,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;KACjC;AAED,IAAA,gBAAgB,CAAE,EAAO,EAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;AAED,IAAA,iBAAiB,CAAE,EAAO,EAAA;AACxB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KACrB;;qHApGU,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,wBAAwB,EARxB,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA;AACE,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,WAAW,EAAE,wBAAwB;AACrC,YAAA,KAAK,EAAE,IAAI;AACZ,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EClFH,+5CAmCA,EAAA,MAAA,EAAA,CAAA,0nBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA,aAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,SAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,CAAA,CAAA;2FDiDa,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAnEpC,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,oBAAoB,EA0DnB,SAAA,EAAA;AACT,wBAAA;AACE,4BAAA,OAAO,EAAE,iBAAiB;AAC1B,4BAAA,WAAW,EAA0B,wBAAA;AACrC,4BAAA,KAAK,EAAE,IAAI;AACZ,yBAAA;AACF,qBAAA,EAAA,QAAA,EAAA,+5CAAA,EAAA,MAAA,EAAA,CAAA,0nBAAA,CAAA,EAAA,CAAA;8BAIQ,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;;AEvFR;MA2Ba,qBAAqB,CAAA;;kHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAArB,qBAAqB,EAAA,YAAA,EAAA,CAHjB,wBAAwB,CAAA,EAAA,OAAA,EAAA,CAXvC,gBAAgB;QAChB,OAAO;QACP,mBAAmB;QACnB,IAAI;QACJ,QAAQ;QACR,YAAY;QACZ,SAAS;QACT,cAAc;QACd,eAAe;AACf,QAAA,cAAc,aAGJ,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAEvB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,YAdhC,gBAAgB;QAEhB,mBAAmB;QAKnB,cAAc;QAEd,cAAc,CAAA,EAAA,CAAA,CAAA;2FAKH,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAhBjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,OAAO,EAAE;wBACR,gBAAgB;wBAChB,OAAO;wBACP,mBAAmB;wBACnB,IAAI;wBACJ,QAAQ;wBACR,YAAY;wBACZ,SAAS;wBACT,cAAc;wBACd,eAAe;wBACf,cAAc;AACd,qBAAA;oBACA,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;AACpC,iBAAA,CAAA;;;MCTY,gBAAgB,CAAA;AAN7B,IAAA,WAAA,GAAA;AAOU,QAAA,IAAA,CAAA,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;QAEX,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;QAChC,IAAI,CAAA,IAAA,GAAG,aAAa,CAAC;QACrB,IAAI,CAAA,IAAA,GAAG,KAAK,CAAC;;QAGb,IAAoB,CAAA,oBAAA,GAAG,KAAK,CAAC;AAEtC,QAAA,IAAA,CAAA,KAAK,GAAG,IAAI,eAAe,CAAU,IAAI,CAAC,CAAA;AAwB3C,KAAA;IAtBC,QAAQ,GAAA;QACN,IAAG,IAAI,CAAC,oBAAoB,EAAC;YAC3B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAAG;;gBAEnC,IACE,KAAK,YAAa,eAAe;oBACjC,KAAK,YAAY,oBAAoB,EACtC;AACC,oBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACtB,iBAAA;qBACI,IACH,KAAK,YAAY,aAAa;AAC9B,oBAAA,KAAK,YAAY,eAAe;AAChC,oBAAA,KAAK,YAAY,gBAAgB;oBACjC,KAAK,YAAY,kBAAkB,EACpC;AACC,oBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACvB,iBAAA;AACH,aAAC,CAAC,CAAA;AACH,SAAA;KACF;;6GAhCU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gBAAgB,mLCjB7B,4tBAiBA,EAAA,MAAA,EAAA,CAAA,qgBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,MAAA,EAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FDAa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAN5B,SAAS;+BACE,SAAS,EAAA,eAAA,EAGF,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,4tBAAA,EAAA,MAAA,EAAA,CAAA,qgBAAA,CAAA,EAAA,CAAA;8BAK1B,YAAY,EAAA,CAAA;sBAAhC,KAAK;uBAAC,YAAY,CAAA;gBACV,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAGG,oBAAoB,EAAA,CAAA;sBAA5B,KAAK;;;MENK,aAAa,CAAA;;0GAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2GAAb,aAAa,EAAA,YAAA,EAAA,CAVtB,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAGhB,YAAY;AACZ,QAAA,qBAAqB,aAGrB,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAGP,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAPtB,YAAY;QACZ,qBAAqB,CAAA,EAAA,CAAA,CAAA;2FAMZ,aAAa,EAAA,UAAA,EAAA,CAAA;kBAZzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,gBAAgB;AACjB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,qBAAqB;AACtB,qBAAA;AACD,oBAAA,OAAO,EAAC;wBACN,gBAAgB;AACjB,qBAAA;AACF,iBAAA,CAAA;;;SChBe,wBAAwB,GAAA;IACvC,OAAO,CAAC,IAAqB,KAA6B;QACzD,MAAM,KAAK,GAAS,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,KAAK,CAAC;QACpD,MAAM,GAAG,GAAS,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC;AAEhD,QAAA,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;AACzD,YAAA,OAAO,IAAI,CAAC;AACZ,SAAA;AAED,QAAA,OAAO,KAAK,IAAI,GAAG,GAAG,EAAE,gBAAgB,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AACzD,KAAC,CAAC;AACH;;SCXgB,+BAA+B,GAAA;IAC9C,OAAO,CAAC,OAAuB,KAA8B;AAE5D,QAAA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAE5B,IAAI,CAAC,KAAK,EAAE;AACX,YAAA,OAAO,IAAI,CAAC;AACZ,SAAA;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE1C,IAAG,CAAC,YAAY,EAAC;AAChB,YAAA,OAAO,EAAC,YAAY,EAAC,IAAI,EAAC,CAAA;AAC1B,SAAA;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE1C,IAAG,CAAC,YAAY,EAAC;AAChB,YAAA,OAAO,EAAC,YAAY,EAAC,IAAI,EAAC,CAAA;AAC1B,SAAA;QAED,MAAM,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxC,QAAA,IAAG,CAAC,UAAU;AAAE,YAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,CAAA;AAEzC,QAAA,MAAM,aAAa,GAAG,YAAY,IAAI,YAAY,IAAI,UAAU,CAAC;AAEjE,QAAA,OAAO,CAAC,aAAa,GAAG,EAAC,gBAAgB,EAAC,IAAI,EAAC,GAAE,IAAI,CAAC;AACvD,KAAC,CAAA;AACF;;AC9Ba,MAAA,SAAS,GAAG;AACxB,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,MAAM,EAAE,QAAQ;AAChB,IAAA,IAAI,EAAE,MAAM;AACZ,IAAA,MAAM,EAAE,QAAQ;AACf,IAAA,YAAY,EAAG,cAAc;AAC9B,IAAA,KAAK,EAAE,OAAO;AACd,IAAA,QAAQ,EAAE,UAAU;AACpB,IAAA,WAAW,EAAE,aAAa;AACzB,IAAA,UAAU,EAAG,MAAM;AACpB,IAAA,SAAS,EAAG,IAAI;EACN;AAEE,MAAA,kBAAkB,GAA6C;AAC3E,IAAA,IAAI,EAAE,EAAE;AACR,IAAA,QAAQ,EAAE,EAAE;AACZ,IAAA,KAAK,EAAE,KAAK;AACZ,IAAA,MAAM,EAAE,IAAI;AACZ,IAAA,IAAI,EAAE,IAAI;AACV,IAAA,MAAM,EAAE,IAAI;AACZ,IAAA,YAAY,EAAE,IAAI;AAClB,IAAA,WAAW,EAAE,IAAI;AACjB,IAAA,UAAU,EAAE,IAAI;AAChB,IAAA,SAAS,EAAE,IAAI;EACd;AAIW,MAAA,mBAAmB,GAAG;IACjC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,cAAc,EAAG,YAAY,EAAG,KAAK,EAAG;IACrE,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,uBAAuB,EAAE,YAAY,EAAG,KAAK,EAAG;IAC9E,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,0BAA0B,EAAE,YAAY,EAAG,KAAK,EAAG;IACjF,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,0CAA0C,EAAG,YAAY,EAAG,KAAK,EAAC;IACnG,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,0CAA0C,EAAG,YAAY,EAAG,KAAK,EAAC;IACnG,EAAE,IAAI,EAAE,YAAY,EAAE,OAAO,EAAE,0CAA0C,EAAG,YAAY,EAAG,KAAK,EAAE;IAClG,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,wBAAwB,EAAG,YAAY,EAAG,KAAK,EAAC;IACtF,EAAE,IAAI,EAAE,qBAAqB,EAAE,OAAO,EAAE,6CAA6C,EAAG,YAAY,EAAG,KAAK,EAAC;IAC7G,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,wBAAwB,EAAG,YAAY,EAAG,KAAK,EAAC;IACtF,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,SAAS,EAAG,YAAY,EAAG,KAAK,EAAC;IAClE,EAAE,IAAI,EAAE,mBAAmB,EAAE,OAAO,EAAE,2BAA2B,EAAG,YAAY,EAAG,KAAK,EAAC;IACzF,EAAE,IAAI,EAAE,gBAAgB,EAAE,OAAO,EAAE,0BAA0B,EAAE,YAAY,EAAG,KAAK,EAAE;IACrF,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,iBAAiB,EAAE,YAAY,EAAG,KAAK,EAAE;IACzE,EAAE,IAAI,EAAE,oBAAoB,EAAE,OAAO,EAAE,sBAAsB,EAAE,YAAY,EAAG,IAAI,EAAE;;;MCtCzE,WAAW,CAAA;AADxB,IAAA,WAAA,GAAA;AAGC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;AACjC,KAAA;;wGAHY,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,cADE,MAAM,EAAA,CAAA,CAAA;2FACnB,WAAW,EAAA,UAAA,EAAA,CAAA;kBADvB,UAAU;mBAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAA;;;ICuBtB,WAIX;AAJD,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACrB,CAAC,EAJW,UAAU,KAAV,UAAU,GAIrB,EAAA,CAAA,CAAA,CAAA;AAGD;MAOa,oBAAoB,CAAA;AAgB/B,IAAA,WAAA,CAA6B,EAAe,EAAU,cAAiC,EAAU,WAAyB,EAAA;QAA7F,IAAE,CAAA,EAAA,GAAF,EAAE,CAAa;QAAU,IAAc,CAAA,cAAA,GAAd,cAAc,CAAmB;QAAU,IAAW,CAAA,WAAA,GAAX,WAAW,CAAc;QAbvG,IAAY,CAAA,YAAA,GAAG,KAAK,CAAC;AAE9B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAa,CAAC;QAErD,IAAS,CAAA,SAAA,GAAG,SAAS,CAAC;QACtB,IAAa,CAAA,aAAA,GAAG,mBAAmB,CAAC;AAGpC,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;AACrD,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,OAAO,EAAQ,CAAC;AAE3B,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAa,CAAC;;;AA2ClD,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,IAAe,KAAI;AAC3C,YAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAC7B,YAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;YACnC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvC,SAAC,CAAC;;AAIM,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,SAAkB,KAAe;AACtD,YAAA,MAAM,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;AACrE,YAAA,MAAM,eAAe,GAAG,eAAe,EAAE,UAAU,IAAI,EAAE,CAAC;AAC1D,YAAA,MAAM,oBAAoB,GAAG,eAAe,EAAE,eAAe,IAAI,EAAE,CAAC;AACpE,YAAA,MAAM,aAAa,GAAG,eAAe,EAAE,QAAQ,CAAA;;AAI/C,YAAA,IAAI,eAAe;AAAE,gBAAA,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YAGhF,MAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CACzB,EAAE,EACF;AACE,gBAAA,UAAU,EAAE,eAAe;AAC3B,gBAAA,eAAe,EAAE,oBAAoB;AACrC,gBAAA,QAAQ,EAAG,aAAa;AACzB,aAAA,CACF,CAAC;YAEF,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,KACtB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CACnD,CAAC;AAGF,YAAA,OAAO,KAAK,CAAC;AACf,SAAC,CAAC;;AAGM,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,KAAY,KAAiB;YAC9C,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAA4B,CAAC,GAAG,IAAI,CAAC;AAEzG,YAAA,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAK,EAAE,EAAE;gBACnE,UAAU,EAAE,KAAK,CAAC,UAAU;gBAC5B,eAAe,EAAE,KAAK,CAAC,eAAe;gBACtC,QAAQ,EAAE,KAAK,CAAC,QAAQ;AACzB,aAAA,CAAC,CAAC;AACL,SAAC,CAAC;;QAGM,IAAU,CAAA,UAAA,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAmB,KAAI;;YAEtD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;AACnC,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;AACnD,aAAA;AACH,SAAC,CAAC;KA/F6H;IAE/H,QAAQ,GAAA;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAEzB,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,SAAS,CAAC,MAAK;AAC9E,YAAA,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC;AACrB,SAAC,CAAC,CAAC;KACJ;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;AAC1B,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC7B,QAAA,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACnC,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;KACrC;AAED,IAAA,YAAY,CAAC,OAAgB,EAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAA;KAC1I;;;IAIO,iBAAiB,GAAA;AACvB,QAAA,IAAI,CAAC,UAAU;AACZ,aAAA,IAAI,CACH,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EACrB,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,EACxB,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EACvC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAC/B;AACA,aAAA,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAE/B;;AA+DO,IAAA,iBAAiB,CAAC,IAAe,EAAA;AACvC,QAAA,IAAI,CAAC,YAAY;AACd,aAAA,IAAI,CACH,YAAY,CAAC,GAAG,CAAC,EACjB,oBAAoB,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,EAC9D,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAC/B;AACA,aAAA,SAAS,CAAC,CAAC,OAAO,KAAI;AACrB,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACnB,gBAAA,IAAI,EAAG,OAAO;AACd,gBAAA,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK;AACvB,gBAAA,MAAM,EAAG,IAAI,CAAC,IAAI,CAAC,MAAM;AAC1B,aAAA,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACN;AAEO,IAAA,uBAAuB,CAAC,IAAe,EAAA;QAC7C,IAAI,UAAU,GAAG,SAAS,CAAA;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACpD,aAAA,SAAS,EAAE,MAAM,IAAG;YACnB,IAAG,UAAU,KAAK,SAAS,EAAC;AAC1B,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACnB,oBAAA,IAAI,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK;AACtB,oBAAA,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,KAAK;oBACvB,MAAM;AACP,iBAAA,CAAC,CAAC;AACJ,aAAA;YACD,UAAU,GAAG,MAAM,CAAC;SAErB,EAAE,CAAA;KACN;;;IAIO,OAAO,CAAC,IAAS,EAAE,IAAS,EAAA;QAClC,IAAI,IAAI,KAAK,IAAI;AAAE,YAAA,OAAO,IAAI,CAAC;QAE/B,IACE,OAAO,IAAI,KAAK,QAAQ;YACxB,OAAO,IAAI,KAAK,QAAQ;AACxB,YAAA,IAAI,KAAK,IAAI;AACb,YAAA,IAAI,KAAK,IAAI;AAEb,YAAA,OAAO,KAAK,CAAC;QAEf,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAEhC,QAAA,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM;AAAE,YAAA,OAAO,KAAK,CAAC;AAEhD,QAAA,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;AACvB,YAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;AAAE,gBAAA,OAAO,KAAK,CAAC;AACvC,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAAE,gBAAA,OAAO,KAAK,CAAC;AACvD,SAAA;AAED,QAAA,OAAO,IAAI,CAAC;KACb;IAGD,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;AAC3B,QAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;KAChC;;AAGD,IAAA,UAAU,CAAC,KAAU,EAAA;AACnB,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;KACnD;AAED,IAAA,gBAAgB,CAAC,EAAwB,EAAA;QACvC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CACzB,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAC/B,oBAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KACzC;AAED,IAAA,iBAAiB,CAAC,EAAc,EAAA;QAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,oBAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;KACpG;AAED,IAAA,gBAAgB,CAAC,UAAmB,EAAA;AAClC,QAAA,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;KACvD;;iHAnMU,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAD,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAE,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,oBAAoB,iOCxCjC,+yTAsNA,EAAA,MAAA,EAAA,CAAA,uDAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,oBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,mBAAA,EAAA,mBAAA,EAAA,KAAA,EAAA,KAAA,EAAA,WAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,aAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,SAAA,EAAA,aAAA,EAAA,UAAA,EAAA,WAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,aAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,MAAA,EAAA,MAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA;2FD9Ka,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;+BACE,cAAc,EAAA,eAAA,EAGP,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,+yTAAA,EAAA,MAAA,EAAA,CAAA,uDAAA,CAAA,EAAA,CAAA;yJAGtC,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACa,YAAY,EAAA,CAAA;sBAA9B,KAAK;uBAAC,UAAU,CAAA;gBAEP,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBASG,eAAe,EAAA,CAAA;sBAAxB,MAAM;;;AEtDT;AAgBA;MAkBa,iBAAiB,CAAA;;8GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAjB,iBAAiB,EAAA,YAAA,EAAA,CAHb,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAXjC,YAAY;QACZ,iBAAiB;QACjB,iBAAiB;QACjB,mBAAmB;QACnB,iBAAiB;QACjB,eAAe;QACf,eAAe;QACf,YAAY;QACZ,mBAAmB;AACnB,QAAA,qBAAqB,aAGb,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAEnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,YAd1B,YAAY;QACZ,iBAAiB;QACjB,iBAAiB;QACjB,mBAAmB;QACnB,iBAAiB;QACjB,eAAe;QACf,eAAe;QACf,YAAY;QACZ,mBAAmB;QACnB,qBAAqB,CAAA,EAAA,CAAA,CAAA;2FAKZ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAhB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,OAAO,EAAE;wBACP,YAAY;wBACZ,iBAAiB;wBACjB,iBAAiB;wBACjB,mBAAmB;wBACnB,iBAAiB;wBACjB,eAAe;wBACf,eAAe;wBACf,YAAY;wBACZ,mBAAmB;wBACnB,qBAAqB;AACtB,qBAAA;oBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;oBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;AAChC,iBAAA,CAAA;;;AC5BM,MAAM,YAAY,GAAG,iBAAiB,CAAC;AAC7C,IAAA,MAAM,EAAE,WAAW;AACnB,IAAA,MAAM,EAAE;QACP,UAAU,EAAE,KAAK,EAAiB;QAClC,eAAe,EAAE,KAAK,EAAsB;QAE5C,aAAa,EAAE,KAAK,EAAwB;QAE1C,YAAY,EAAE,UAAU,EAAE;QAC1B,cAAc,EAAE,UAAU,EAAE;AAE9B,KAAA;AACD,CAAA;;ACJY,MAAA,qBAAqB,GAAmB;AACnD,IAAA,IAAI,EAAE,EAAE;AACR,IAAA,KAAK,EAAE,IAAI;AACX,IAAA,MAAM,EAAG,OAAO;AAChB,IAAA,OAAO,EAAE,KAAK;AACd,IAAA,SAAS,EAAE,EAAE;EACb;AAEK,MAAM,gBAAgB,GAAG,aAAa,CAAC;AAC5C,IAAA,IAAI,EAAE,WAAW;AACjB,IAAA,OAAO,EAAE,aAAa,CACpB,qBAAqB,EACrB,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,MAAM,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAC9E,EAAE,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,MAAM,KAAI;AAC5C,QAAA,MAAM,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACrD,OAAO;AACL,YAAA,GAAG,KAAK;YACR,IAAI;AACJ,YAAA,KAAK,EAAG,MAAM,CAAC,KAAK,CAAC,KAAK;AAC1B,YAAA,MAAM,EAAG,MAAM,CAAC,KAAK,CAAC,MAAM;AAC5B,YAAA,OAAO,EAAE,IAAI;SACd,CAAC;KACH,CAAC,EACF,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,MAAM,EAAE,GAAG,KAAK,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,EAC7F,EAAE,CAAC,YAAY,CAAC,WAAW,EAAE,MAAM,qBAAqB,CAAC,EACzD,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,KAAK,MAAM;AACrC,QAAA,GAAG,KAAK;AACR,QAAA,IAAI,EAAG,EAAE;AACT,QAAA,MAAM,EAAG,SAAS;AAClB,QAAA,KAAK,EAAG,IAAI;AACZ,QAAA,OAAO,EAAE,KAAK;AACf,KAAA,CAAC,CAAC,CACJ;AACF,CAAA;;AC5CD,MAAM,EAAE,oBAAoB,EAAE,UAAU,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,EAAE,GACrF,gBAAgB,CAAC;AAEN,MAAA,cAAc,GAAG;IAC5B,oBAAoB;IACpB,UAAU;IACV,eAAe;IACf,aAAa;IACb,WAAW;;;MCHA,YAAY,CAAA;IAUxB,WACS,CAAA,QAAiB,EACjB,WAAwB,EAAA;QADxB,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;QACjB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;AATjC,QAAA,IAAA,CAAA,YAAY,GAAG,YAAY,CAAC,MAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,EAChD,GAAG,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAC7C,EACF,EAAE,QAAQ,EAAE,KAAK,EAAE,CACnB,CAAC;KAKG;;yGAbO,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAAE,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6GAAZ,YAAY,EAAA,CAAA,CAAA;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBADxB,UAAU;;;ACNX;;AAEG;AAEH;AACA;;ACLA;;AAEG;;;;"}