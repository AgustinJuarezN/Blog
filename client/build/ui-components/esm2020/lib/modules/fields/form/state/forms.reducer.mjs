import { createFeature, createReducer, on } from '@ngrx/store';
import { formsActions } from "./forms.actions";
export const ngrxFormsInitialState = {
    data: {},
    valid: true,
    status: 'VALID',
    touched: false,
    structure: [],
};
export const ngrxFormsFeature = createFeature({
    name: 'ngrxForms',
    reducer: createReducer(ngrxFormsInitialState, on(formsActions.setData, (state, action) => ({ ...state, data: action.data })), on(formsActions.updateData, (state, action) => {
        const data = { ...state.data, ...action.state.data };
        return {
            ...state,
            data,
            valid: action.state.valid,
            status: action.state.status,
            touched: true
        };
    }), on(formsActions.setStructure, (state, action) => ({ ...state, structure: action.structure })), on(formsActions.destroyForm, () => ngrxFormsInitialState), on(formsActions.resetForm, (state) => ({
        ...state,
        data: {},
        status: 'INVALID',
        valid: true,
        touched: false,
    }))),
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXMucmVkdWNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWNvbXBvbmVudHMvc3JjL2xpYi9tb2R1bGVzL2ZpZWxkcy9mb3JtL3N0YXRlL2Zvcm1zLnJlZHVjZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGFBQWEsRUFBRSxhQUFhLEVBQUUsRUFBRSxFQUFDLE1BQU0sYUFBYSxDQUFDO0FBRzdELE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQVU3QyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBbUI7SUFDbkQsSUFBSSxFQUFFLEVBQUU7SUFDUixLQUFLLEVBQUUsSUFBSTtJQUNYLE1BQU0sRUFBRyxPQUFPO0lBQ2hCLE9BQU8sRUFBRSxLQUFLO0lBQ2QsU0FBUyxFQUFFLEVBQUU7Q0FDZCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsYUFBYSxDQUFDO0lBQzVDLElBQUksRUFBRSxXQUFXO0lBQ2pCLE9BQU8sRUFBRSxhQUFhLENBQ3BCLHFCQUFxQixFQUNyQixFQUFFLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLEtBQUssRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsRUFDOUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDNUMsTUFBTSxJQUFJLEdBQUcsRUFBRSxHQUFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JELE9BQU87WUFDTCxHQUFHLEtBQUs7WUFDUixJQUFJO1lBQ0osS0FBSyxFQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSztZQUMxQixNQUFNLEVBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNO1lBQzVCLE9BQU8sRUFBRSxJQUFJO1NBQ2QsQ0FBQztJQUNKLENBQUMsQ0FBQyxFQUNGLEVBQUUsQ0FBQyxZQUFZLENBQUMsWUFBWSxFQUFFLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUM3RixFQUFFLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUN6RCxFQUFFLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNyQyxHQUFHLEtBQUs7UUFDUixJQUFJLEVBQUcsRUFBRTtRQUNULE1BQU0sRUFBRyxTQUFTO1FBQ2xCLEtBQUssRUFBRyxJQUFJO1FBQ1osT0FBTyxFQUFFLEtBQUs7S0FDZixDQUFDLENBQUMsQ0FDSjtDQUNGLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlRmVhdHVyZSwgY3JlYXRlUmVkdWNlciwgb259IGZyb20gJ0BuZ3J4L3N0b3JlJztcclxuaW1wb3J0IHtGb3JtQ29udHJvbFN0YXR1c30gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQge0ZpZWxkfSBmcm9tIFwiLi4vc2hhcmVkXCI7XHJcbmltcG9ydCB7Zm9ybXNBY3Rpb25zfSBmcm9tIFwiLi9mb3Jtcy5hY3Rpb25zXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIE5ncnhGb3Jtc1N0YXRlIHtcclxuICBkYXRhOiBhbnk7XHJcbiAgc3RydWN0dXJlOiBGaWVsZFtdO1xyXG4gIHZhbGlkOiBib29sZWFuO1xyXG4gIHN0YXR1cyA6IEZvcm1Db250cm9sU3RhdHVzO1xyXG4gIHRvdWNoZWQ6IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBuZ3J4Rm9ybXNJbml0aWFsU3RhdGU6IE5ncnhGb3Jtc1N0YXRlID0ge1xyXG4gIGRhdGE6IHt9LFxyXG4gIHZhbGlkOiB0cnVlLFxyXG4gIHN0YXR1cyA6ICdWQUxJRCcsXHJcbiAgdG91Y2hlZDogZmFsc2UsXHJcbiAgc3RydWN0dXJlOiBbXSxcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBuZ3J4Rm9ybXNGZWF0dXJlID0gY3JlYXRlRmVhdHVyZSh7XHJcbiAgbmFtZTogJ25ncnhGb3JtcycsXHJcbiAgcmVkdWNlcjogY3JlYXRlUmVkdWNlcihcclxuICAgIG5ncnhGb3Jtc0luaXRpYWxTdGF0ZSxcclxuICAgIG9uKGZvcm1zQWN0aW9ucy5zZXREYXRhLCAoc3RhdGUsIGFjdGlvbikgPT4gKHsgLi4uc3RhdGUsIGRhdGE6IGFjdGlvbi5kYXRhIH0pKSxcclxuICAgIG9uKGZvcm1zQWN0aW9ucy51cGRhdGVEYXRhLCAoc3RhdGUsIGFjdGlvbikgPT4ge1xyXG4gICAgICBjb25zdCBkYXRhID0geyAuLi5zdGF0ZS5kYXRhLCAuLi5hY3Rpb24uc3RhdGUuZGF0YSB9O1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLnN0YXRlLFxyXG4gICAgICAgIGRhdGEsXHJcbiAgICAgICAgdmFsaWQgOiBhY3Rpb24uc3RhdGUudmFsaWQsXHJcbiAgICAgICAgc3RhdHVzIDogYWN0aW9uLnN0YXRlLnN0YXR1cyxcclxuICAgICAgICB0b3VjaGVkOiB0cnVlXHJcbiAgICAgIH07XHJcbiAgICB9KSxcclxuICAgIG9uKGZvcm1zQWN0aW9ucy5zZXRTdHJ1Y3R1cmUsIChzdGF0ZSwgYWN0aW9uKSA9PiAoeyAuLi5zdGF0ZSwgc3RydWN0dXJlOiBhY3Rpb24uc3RydWN0dXJlIH0pKSxcclxuICAgIG9uKGZvcm1zQWN0aW9ucy5kZXN0cm95Rm9ybSwgKCkgPT4gbmdyeEZvcm1zSW5pdGlhbFN0YXRlKSxcclxuICAgIG9uKGZvcm1zQWN0aW9ucy5yZXNldEZvcm0sIChzdGF0ZSkgPT4gKHtcclxuICAgICAgLi4uc3RhdGUsXHJcbiAgICAgIGRhdGEgOiB7fSxcclxuICAgICAgc3RhdHVzIDogJ0lOVkFMSUQnLFxyXG4gICAgICB2YWxpZCA6IHRydWUsXHJcbiAgICAgIHRvdWNoZWQ6IGZhbHNlLFxyXG4gICAgfSkpLFxyXG4gICksXHJcbn0pO1xyXG4iXX0=